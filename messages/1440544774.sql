--------------------------------------------------------
--  File created - Monday-August-17-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence USER_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."USER_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence WORK_EXPERIENCE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."WORK_EXPERIENCE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SKILLS_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."SKILLS_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SAS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."SAS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SALES_SUM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."SALES_SUM_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 481 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SALES_RETURN_SUM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."SALES_RETURN_SUM_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SALARY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."SALARY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PURCHASE_RETURN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."PURCHASE_RETURN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PHOTOGRAPH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."PHOTOGRAPH_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PERSONAL_DETAILS_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."PERSONAL_DETAILS_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PERSONAL_DETAILS_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."PERSONAL_DETAILS_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LOAN_BALANCE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."LOAN_BALANCE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LICENSE_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."LICENSE_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LEAVE_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."LEAVE_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LANGUAGES_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."LANGUAGES_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence JOB_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."JOB_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ITEMS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."ITEMS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ITEM_CATEGORY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."ITEM_CATEGORY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence IMMIGRATION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."IMMIGRATION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GRN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."GRN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 161 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ERP_PAYABALE_RECEIVABLE_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."ERP_PAYABALE_RECEIVABLE_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ERP_LEDGER_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."ERP_LEDGER_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ERP_CHEQUES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."ERP_CHEQUES_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ERP_ACCOUNT_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."ERP_ACCOUNT_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EMPLOYEE_POST_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."EMPLOYEE_POST_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EMPLOYEE_LOANTYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."EMPLOYEE_LOANTYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EMPLOYEE_ADVANCEPAYMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."EMPLOYEE_ADVANCEPAYMENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EMERGENCY_CONTACT_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."EMERGENCY_CONTACT_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EDUCATION_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."EDUCATION_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEPENDENT_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."DEPENDENT_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEPARTMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."DEPARTMENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONTACT_DETAILS_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."CONTACT_DETAILS_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ATTENDENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."ATTENDENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ATTACHMENT_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."ATTACHMENT_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table USER_TYPE
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."USER_TYPE" 
   (	"CODE" NUMBER, 
	"USER_TYPE_DESCRIPTION" VARCHAR2(255 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table STOCK
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."STOCK" 
   (	"TRANSNO" NUMBER, 
	"SAS_NO" NUMBER, 
	"ITEM_CODE" NUMBER, 
	"IN_QTY" NUMBER, 
	"OUT_QTY" NUMBER, 
	"TRANS_TYPE" VARCHAR2(50 BYTE), 
	"TRANS_DATE" DATE DEFAULT SYSDATE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SUPPLIER
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SUPPLIER" 
   (	"SUP_CODE" VARCHAR2(255 BYTE), 
	"SUP_NAME" VARCHAR2(255 BYTE), 
	"ADDRESS" VARCHAR2(255 BYTE) DEFAULT NULL, 
	"EMAIL" VARCHAR2(255 BYTE) DEFAULT NULL, 
	"CONTACT_NO" VARCHAR2(255 BYTE) DEFAULT NULL, 
	"SAS_NO" NUMBER(*,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USER_PERMISSION
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."USER_PERMISSION" 
   (	"PK_ID" NUMBER, 
	"MD_ID" NUMBER, 
	"USER_GROUP_ID" NUMBER, 
	"PERMISION_TYPE" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table WORK_EXPERIENCE
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."WORK_EXPERIENCE" 
   (	"COMPANY" VARCHAR2(20 BYTE), 
	"JOB_TITLE" VARCHAR2(20 BYTE), 
	"W_FROM" DATE, 
	"W_TO" DATE, 
	"COMMENTS" VARCHAR2(200 BYTE), 
	"EXPERIENCE_ID" NUMBER, 
	"EMP_ID" NUMBER, 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SOFTWARE_MODULES
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SOFTWARE_MODULES" 
   (	"PK_ID" NUMBER, 
	"M_ID" NUMBER, 
	"MODULE_NAME" VARCHAR2(100 BYTE), 
	"URL" VARCHAR2(255 BYTE), 
	"ICON_CSS" VARCHAR2(255 BYTE), 
	"COLOR" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SKILLS
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SKILLS" 
   (	"SKILL" VARCHAR2(20 BYTE), 
	"YEARS_OF_EXPERIENCE" NUMBER(*,0), 
	"COMMENTS" VARCHAR2(1000 BYTE), 
	"SKILL_ID" NUMBER, 
	"EMP_ID" NUMBER, 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SETTING
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SETTING" 
   (	"ETF" VARCHAR2(20 BYTE), 
	"EPF" VARCHAR2(20 BYTE), 
	"NO" NUMBER, 
	"ALLOWNCE" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SAS
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SAS" 
   (	"SAS_NO" NUMBER(*,0), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"ADDRESS" VARCHAR2(20 BYTE), 
	"TELNO" VARCHAR2(20 BYTE), 
	"WEB" VARCHAR2(20 BYTE), 
	"FAX" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SALES_TYPES
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SALES_TYPES" 
   (	"CODE" NUMBER(*,0), 
	"DESCRIPTION" VARCHAR2(255 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SALES_SUMMURY_MONTH_WISE_TBL
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SALES_SUMMURY_MONTH_WISE_TBL" 
   (	"MONTH" VARCHAR2(20 BYTE), 
	"NETAMOUNT" NUMBER, 
	"CREDIT" NUMBER, 
	"CHEQUES" NUMBER, 
	"CASH" NUMBER, 
	"CREDITCARD" NUMBER, 
	"DISCOUNT" NUMBER, 
	"YEAR" VARCHAR2(20 BYTE), 
	"ID" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SALES_SUM
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SALES_SUM" 
   (	"INVOICE_NO" NUMBER(*,0), 
	"CUS_CODE" VARCHAR2(255 BYTE), 
	"DDATE" DATE, 
	"SALES_TYPE" NUMBER(*,0), 
	"TOTAL_AMOUNT" NUMBER(*,0), 
	"DISCOUNT" NUMBER(*,0) DEFAULT NULL, 
	"NET_AMOUNT" NUMBER(*,0), 
	"CASH" NUMBER(*,0) DEFAULT NULL, 
	"SAS_NO" NUMBER(*,0), 
	"CHEQUES" NUMBER, 
	"CREDITCARD" NUMBER, 
	"CREDIT" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SALES_RETURN_SUM
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SALES_RETURN_SUM" 
   (	"SRNO" NUMBER(*,0), 
	"INVOICE_NO" NUMBER(*,0) DEFAULT NULL, 
	"DDATE" DATE DEFAULT NULL, 
	"TOTAL_AMOUNT" NUMBER(*,0), 
	"DISCOUNT" NUMBER(*,0) DEFAULT NULL, 
	"NET_AMOUNT" NUMBER(*,0), 
	"CUS_CODE" VARCHAR2(255 BYTE), 
	"SAS_NO" NUMBER(*,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SALES_RETURN_DETAILS
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SALES_RETURN_DETAILS" 
   (	"SRNO" NUMBER(*,0), 
	"INVOICE_NO" NUMBER(*,0) DEFAULT NULL, 
	"ITEM_CODE" NUMBER(*,0), 
	"PRICE" NUMBER(*,0) DEFAULT NULL, 
	"QTY" NUMBER(*,0) DEFAULT NULL, 
	"AMOUNT" NUMBER(*,0) DEFAULT NULL, 
	"DISCOUNT" NUMBER(*,0) DEFAULT NULL, 
	"NET_AMOUNT" NUMBER(*,0) DEFAULT NULL, 
	"SAS_NO" NUMBER(*,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SALES_DETAILS
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SALES_DETAILS" 
   (	"SPRICE" NUMBER(*,0) DEFAULT NULL, 
	"PPRICE" NUMBER(*,0) DEFAULT NULL, 
	"QTY" NUMBER(*,0) DEFAULT NULL, 
	"TOTAL" NUMBER(*,0), 
	"DISCOUNT" NUMBER(*,0) DEFAULT NULL, 
	"NET_AMOUNT" NUMBER(*,0), 
	"SAS_NO" NUMBER(*,0), 
	"INVOICENO" NUMBER(*,0), 
	"ITEMCODE" NUMBER(*,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SALARY
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SALARY" 
   (	"BASIC_SALARY" NUMBER, 
	"PAY_FREQUENCY" VARCHAR2(20 BYTE), 
	"COMMENTS" VARCHAR2(2000 BYTE), 
	"POSITION" VARCHAR2(20 BYTE), 
	"EMP_ID" NUMBER, 
	"SALARY_ID" NUMBER(20,0), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PURCHASE_RETURN
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."PURCHASE_RETURN" 
   (	"PRNNO" NUMBER(*,0), 
	"SUP_CODE" VARCHAR2(255 BYTE), 
	"DDATE" DATE DEFAULT NULL, 
	"TOTAL_AMOUNT" NUMBER(*,0), 
	"DISCOUNT" NUMBER(*,0), 
	"NET_AMOUNT" NUMBER(*,0), 
	"SAS_NO" NUMBER(*,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRN_DETAILS
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."PRN_DETAILS" 
   (	"PRNNO" NUMBER(*,0), 
	"ITEMCODE" NUMBER(*,0), 
	"PRICE" NUMBER(*,0) DEFAULT NULL, 
	"QTY" NUMBER(*,0) DEFAULT NULL, 
	"TOTAL" NUMBER(*,0), 
	"DISCOUNT" NUMBER(*,0) DEFAULT NULL, 
	"NET_AMOUNT" NUMBER(*,0), 
	"SAS_NO" NUMBER(*,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PHOTOGRAPH
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."PHOTOGRAPH" 
   (	"P_NUMBER" NUMBER, 
	"EMP_ID" NUMBER, 
	"PHOTO" VARCHAR2(200 BYTE), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PERSONAL_DETAILS
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."PERSONAL_DETAILS" 
   (	"FIRST_NAME" VARCHAR2(20 BYTE), 
	"MIDDLE_NAME" VARCHAR2(20 BYTE), 
	"LAST_NAME" VARCHAR2(20 BYTE), 
	"EMPLOYEE_ID" NUMBER(*,0), 
	"USER_TYPE" VARCHAR2(20 BYTE), 
	"NIC" NUMBER(*,0), 
	"ISSU_DATE" DATE, 
	"MARITAL_STATUS" VARCHAR2(10 BYTE), 
	"NATIONALITY" VARCHAR2(15 BYTE), 
	"DATE_OF_BIRTH" DATE, 
	"NICK_NAME" VARCHAR2(10 BYTE), 
	"SMOKER" VARCHAR2(5 BYTE), 
	"MILITARY_SERVICE" VARCHAR2(15 BYTE), 
	"GENDER" VARCHAR2(20 BYTE), 
	"EMPLOYEE_NAME" VARCHAR2(150 BYTE), 
	"RELIGION" VARCHAR2(20 BYTE), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table OPERNING_STOCK
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."OPERNING_STOCK" 
   (	"SAS_NO" NUMBER, 
	"ITEM_CODE" NUMBER, 
	"STOCK" NUMBER, 
	"DDATE" DATE, 
	"TOTAL_VALUE" NUMBER, 
	"C_USER" VARCHAR2(255 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table MESSAGES
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."MESSAGES" 
   (	"ID" NUMBER, 
	"MFROM" VARCHAR2(50 BYTE), 
	"MTO" VARCHAR2(50 BYTE), 
	"MESSAGEBODY" VARCHAR2(2000 BYTE), 
	"DDATE" VARCHAR2(30 BYTE), 
	"STATUS" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table MEMBERSHIP
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."MEMBERSHIP" 
   (	"MEMBERSHIP" VARCHAR2(20 BYTE), 
	"SUBSCRIPTION_PAID_BY" VARCHAR2(20 BYTE), 
	"SUBSCRIPTION_AMOUNT" FLOAT(126), 
	"CURRENCY" FLOAT(126), 
	"SUBSCRIPTION_COMMENCE_DATE" DATE, 
	"SUBSCRIPTION_RENEWAL_DATE" DATE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table LOAN_BALANCE
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."LOAN_BALANCE" 
   (	"PAY_ID" NUMBER, 
	"AMMOUNT" NUMBER, 
	"EMPLOYEE_ID" NUMBER, 
	"LOAN_ID" NUMBER, 
	"BALANCE" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table LICENSE
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."LICENSE" 
   (	"LICENSE_TYPE" VARCHAR2(20 BYTE), 
	"LICENSE_NUMBER" NUMBER(*,0), 
	"ISSUED_DATE" DATE, 
	"EXPIRY_DATE" DATE, 
	"EMP_ID" NUMBER, 
	"LICEN_ID" NUMBER, 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table LEAVE
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."LEAVE" 
   (	"LEAVE_TYPE" VARCHAR2(100 BYTE), 
	"LEAVE_BALANCE" NUMBER(*,0), 
	"NUMBERS_OF_DATE" NUMBER(*,0), 
	"FROM_DATE" DATE, 
	"TO_DATE" DATE, 
	"COMMENTS" VARCHAR2(2000 BYTE), 
	"LEAVE_ID" NUMBER, 
	"EMP_ID" NUMBER, 
	"STATUS" NUMBER(*,0) DEFAULT NULL, 
	"ACTION" VARCHAR2(200 BYTE), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table LANGUAGES
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."LANGUAGES" 
   (	"LANGUAGE" VARCHAR2(100 BYTE), 
	"FLUENCY" VARCHAR2(100 BYTE), 
	"COMPETENCY" VARCHAR2(100 BYTE), 
	"LAN_ID" NUMBER, 
	"EMP_ID" NUMBER, 
	"COMMENTS" VARCHAR2(1000 BYTE), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table JOB
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."JOB" 
   (	"JOB_TITLE" VARCHAR2(20 BYTE), 
	"JOB_SPECIFICATION" VARCHAR2(100 BYTE), 
	"EMPLOYMENT_STATUS" VARCHAR2(70 BYTE), 
	"JOB_CATEGORY" VARCHAR2(200 BYTE), 
	"JOINED_DATE" DATE, 
	"SUB_UNIT" VARCHAR2(50 BYTE), 
	"LOCATION" VARCHAR2(200 BYTE), 
	"JOB_ID" NUMBER, 
	"EMP_ID" NUMBER, 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ITEMS
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ITEMS" 
   (	"CODE" NUMBER(*,0), 
	"NAME" VARCHAR2(255 BYTE), 
	"COST" NUMBER(*,0) DEFAULT NULL, 
	"SPRICE" NUMBER(*,0) DEFAULT NULL, 
	"BARCODE" VARCHAR2(255 BYTE) DEFAULT NULL, 
	"REORDER_LEVEL" NUMBER(*,0) DEFAULT NULL, 
	"SUP_CODE" VARCHAR2(255 BYTE), 
	"SAS_NO" NUMBER(*,0), 
	"CAT_CODE" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ITEM_CATEGORY
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ITEM_CATEGORY" 
   (	"CAT_NAME" VARCHAR2(255 BYTE) DEFAULT 0, 
	"SAS_NO" NUMBER(*,0), 
	"CAT_CODE" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table IMMIGRATION
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."IMMIGRATION" 
   (	"DOCUMENT" LONG, 
	"I_NUMBER" NUMBER(*,0), 
	"ISSUED_DATE" DATE, 
	"EXPIRY_DATE" DATE, 
	"ELIGIBLE_STATUS" VARCHAR2(30 BYTE), 
	"ISSUED_BY" VARCHAR2(20 BYTE), 
	"ELIGIBLE_REVIEW_DATE" DATE, 
	"COMMENTS" VARCHAR2(2000 BYTE), 
	"EMP_ID" NUMBER, 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table HELP
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."HELP" 
   (	"TOPIC" VARCHAR2(50 BYTE), 
	"SEQ" NUMBER, 
	"INFO" VARCHAR2(80 BYTE)
   ) PCTFREE 0 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 49152 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table GRN_DETAILS
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."GRN_DETAILS" 
   (	"GRNNO" NUMBER(*,0), 
	"ITEMCODE" NUMBER(*,0), 
	"PRICE" NUMBER(*,0) DEFAULT NULL, 
	"QTY" NUMBER(*,0) DEFAULT NULL, 
	"TOTAL" FLOAT(126), 
	"DISCOUNT" FLOAT(126) DEFAULT NULL, 
	"NET_AMOUNT" FLOAT(126), 
	"SAS_NO" FLOAT(126)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table GRN
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."GRN" 
   (	"GRNNO" NUMBER(*,0), 
	"SUP_CODE" VARCHAR2(255 BYTE), 
	"DDATE" DATE DEFAULT NULL, 
	"TOTAL_AMOUNT" NUMBER(*,0) DEFAULT NULL, 
	"DISCOUNT" NUMBER(*,0) DEFAULT NULL, 
	"NET_AMOUNT" NUMBER(*,0) DEFAULT NULL, 
	"SAS_NO" NUMBER(*,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ERPUSER
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ERPUSER" 
   (	"EMAIL" VARCHAR2(255 BYTE), 
	"PASSWORD" VARCHAR2(255 BYTE), 
	"SAS_NO" NUMBER(*,0) DEFAULT NULL, 
	"DEPARTMENT" NUMBER, 
	"USERNAME" VARCHAR2(255 BYTE), 
	"FULLNAME" VARCHAR2(500 BYTE), 
	"ADDRESS" VARCHAR2(500 BYTE), 
	"TYPE" NUMBER, 
	"PHOTO" VARCHAR2(500 BYTE), 
	"CONTACTNO" NUMBER(*,0), 
	"EMP_CODE" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ERP_PAYABALE_RECEIVABLE
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ERP_PAYABALE_RECEIVABLE" 
   (	"ID" NUMBER(10,0), 
	"INVOICE_NO" VARCHAR2(20 BYTE), 
	"INV_DATE" DATE, 
	"CUS_CODE" VARCHAR2(20 BYTE), 
	"AMOUNT" FLOAT(126), 
	"REMARKS" VARCHAR2(100 BYTE), 
	"STATE" NUMBER(22,0), 
	"SAS_NO" NUMBER(22,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

   COMMENT ON COLUMN "SYSTEM"."ERP_PAYABALE_RECEIVABLE"."STATE" IS '0=PAYABLE;1=PAID;2=RECEIVABLE;3=RECIVED';
--------------------------------------------------------
--  DDL for Table ERP_LEDGER
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ERP_LEDGER" 
   (	"ID" NUMBER(4,0), 
	"ACCOUNT_TYPE" NUMBER(4,0), 
	"SAS_NO" NUMBER, 
	"ACCOUNT_NUMBER" NUMBER, 
	"CREDIT" FLOAT(126), 
	"DEBIT" FLOAT(126), 
	"LEDG_DATE" DATE, 
	"ASSET" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

   COMMENT ON COLUMN "SYSTEM"."ERP_LEDGER"."ACCOUNT_TYPE" IS 'ACCOUNT TYPES';
   COMMENT ON COLUMN "SYSTEM"."ERP_LEDGER"."SAS_NO" IS 'BRANCH CODE';
   COMMENT ON COLUMN "SYSTEM"."ERP_LEDGER"."ASSET" IS 'IS ASSETS/NOT';
--------------------------------------------------------
--  DDL for Table ERP_INVOICE_DETAILS
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ERP_INVOICE_DETAILS" 
   (	"INVOICE_NO" VARCHAR2(20 BYTE), 
	"LEDGER_ID" NUMBER(22,0), 
	"CUS_CODE" VARCHAR2(20 BYTE), 
	"PAY_MODE" NUMBER, 
	"NARRATION" VARCHAR2(1 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ERP_CHEQUES
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ERP_CHEQUES" 
   (	"ID" NUMBER(4,0), 
	"CHEQUENO" VARCHAR2(20 BYTE), 
	"BBRANCH" VARCHAR2(100 BYTE), 
	"SAS_NO" NUMBER, 
	"BDATE" DATE, 
	"BANK" VARCHAR2(50 BYTE), 
	"ACCNO" VARCHAR2(20 BYTE), 
	"AMOUNT" FLOAT(126), 
	"STATE" NUMBER(2,0), 
	"CUS_CODE" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

   COMMENT ON COLUMN "SYSTEM"."ERP_CHEQUES"."STATE" IS 'CLEAR=1/OUTSTANDING=0';
--------------------------------------------------------
--  DDL for Table ERP_BANK_ACCOUNT
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ERP_BANK_ACCOUNT" 
   (	"ID" NUMBER(4,0), 
	"ACCUNT_NAME" VARCHAR2(255 BYTE), 
	"BANK" VARCHAR2(255 BYTE), 
	"ACCOUNT_NUMBER" VARCHAR2(255 BYTE), 
	"BRANCH_NAME" VARCHAR2(255 BYTE), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ERP_ACCOUNTYEAR
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ERP_ACCOUNTYEAR" 
   (	"ID" NUMBER, 
	"STARTDATE" DATE, 
	"ENDDATE" DATE, 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ERP_ACCOUNT_TYPE
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ERP_ACCOUNT_TYPE" 
   (	"ID" NUMBER(4,0), 
	"ACCOUNT_TYPE" NUMBER(4,0), 
	"DESCRIPTION" VARCHAR2(50 BYTE), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

   COMMENT ON COLUMN "SYSTEM"."ERP_ACCOUNT_TYPE"."ACCOUNT_TYPE" IS '0-INCOME;1-EXPENCE;2-ASSET;3-LIABILITY';
--------------------------------------------------------
--  DDL for Table ERP_ACCOUNT_PAY_RECEIVE
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ERP_ACCOUNT_PAY_RECEIVE" 
   (	"ID" NUMBER(4,0), 
	"INVOICE_NO" VARCHAR2(20 BYTE), 
	"INV_DATE" DATE, 
	"CUSTOMER" VARCHAR2(100 BYTE), 
	"AMOUNT" FLOAT(126), 
	"REMARKS" VARCHAR2(100 BYTE), 
	"STATE" NUMBER(2,0), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EMPLOYEE_POST
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."EMPLOYEE_POST" 
   (	"POST_CODE" NUMBER(10,0), 
	"EMPLOYEE_ID" NUMBER(22,0), 
	"EMP_POST" VARCHAR2(100 BYTE), 
	"EMP_BSALARY" NUMBER(22,0), 
	"EMP_OT_RATE" NUMBER(22,0), 
	"EPF" NUMBER(22,0), 
	"ETF" NUMBER(22,0), 
	"DURATION" NUMBER(22,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EMPLOYEE_LOANTYPE
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."EMPLOYEE_LOANTYPE" 
   (	"LOAN_TYPE" VARCHAR2(20 BYTE), 
	"GET_DATE" DATE, 
	"DURATION" NUMBER, 
	"DESCRIPTION" VARCHAR2(20 BYTE), 
	"LOAN_CODE" NUMBER(22,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EMPLOYEE_LOAN_BALANCE
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."EMPLOYEE_LOAN_BALANCE" 
   (	"EMPLOYEE_ID" NUMBER, 
	"AMMOUNT" NUMBER, 
	"LOAN_BALANCE" NUMBER, 
	"STATUS" VARCHAR2(20 BYTE), 
	"PAYMENT_ID" NUMBER, 
	"LOAN_ID" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EMPLOYEE_LOAN
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."EMPLOYEE_LOAN" 
   (	"LOAN_ID" NUMBER(10,0), 
	"EMPLOYEE_ID" NUMBER(22,0), 
	"LOAN_TYPE" VARCHAR2(50 BYTE), 
	"DURATION" NUMBER(22,0), 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"MONTHLY" NUMBER(22,0), 
	"AMMOUNT" NUMBER(22,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EMPLOYEE_ADVANCEPAYMENT
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."EMPLOYEE_ADVANCEPAYMENT" 
   (	"EMPLOYEE_ID" NUMBER, 
	"QUANTITY" NUMBER, 
	"DESCRIPTION" VARCHAR2(20 BYTE), 
	"GET_DATE" DATE, 
	"PAYMENT_CODE" NUMBER(10,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EMERGENCY_CONTACT
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."EMERGENCY_CONTACT" 
   (	"NAME" VARCHAR2(20 BYTE), 
	"RELATIONSHIP" VARCHAR2(15 BYTE), 
	"HOME_TELEPHONE" NUMBER, 
	"MOBILE" NUMBER, 
	"WORK_TELEPHONE" NUMBER, 
	"EC_ID" NUMBER, 
	"EMP_ID" NUMBER, 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EDUCATION
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."EDUCATION" 
   (	"LEVELS" VARCHAR2(20 BYTE), 
	"INSTITUTE" VARCHAR2(20 BYTE), 
	"MAJOR" VARCHAR2(20 BYTE), 
	"GPA" NUMBER(*,0), 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"EDUCATION_ID" NUMBER, 
	"EMP_ID" NUMBER, 
	"YEAR" NUMBER(5,0), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table DEPENDENT
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."DEPENDENT" 
   (	"NAME" VARCHAR2(20 BYTE), 
	"RELATIONSHIP" VARCHAR2(20 BYTE), 
	"PLEASE_SPECIFY" VARCHAR2(20 BYTE), 
	"DATE_OF_BIRTH" DATE, 
	"DEPENDENT_ID" NUMBER, 
	"EMP_ID" NUMBER, 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table DEPARTMENT
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."DEPARTMENT" 
   (	"DEPTNO" NUMBER, 
	"DEPARTMENT" VARCHAR2(100 BYTE), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CUSTOMER
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."CUSTOMER" 
   (	"CUS_CODE" VARCHAR2(255 BYTE), 
	"CUS_NAME" VARCHAR2(255 BYTE), 
	"ADDRESS" VARCHAR2(255 BYTE) DEFAULT NULL, 
	"EMAIL" VARCHAR2(255 BYTE), 
	"CONTACT_NO" VARCHAR2(255 BYTE) DEFAULT NULL, 
	"CREDIT_LEVEL" NUMBER(*,0) DEFAULT NULL, 
	"SAS_NO" NUMBER(*,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CREDITCARD
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."CREDITCARD" 
   (	"TRANSNO" NUMBER, 
	"SAS_NO" NUMBER, 
	"AMOUNT" NUMBER, 
	"CARDNO" VARCHAR2(50 BYTE), 
	"ACC_CODE" VARCHAR2(50 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CONTACT_DETAILS
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."CONTACT_DETAILS" 
   (	"ADDRESS" VARCHAR2(300 BYTE), 
	"CITY" VARCHAR2(50 BYTE), 
	"COUNTRY" VARCHAR2(20 BYTE), 
	"WORK_EMAIL" VARCHAR2(50 BYTE), 
	"OTHER_EMAIL" VARCHAR2(50 BYTE), 
	"EMP_ID" NUMBER, 
	"PROVINCE" VARCHAR2(50 BYTE), 
	"POSTAL_CORD" NUMBER(20,0), 
	"HOME_TELEPHON" NUMBER, 
	"MOBILE" NUMBER, 
	"WORK_TELEPHON" NUMBER, 
	"CONTACT_ID" NUMBER(*,0), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CHEQUES
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."CHEQUES" 
   (	"INVOICENO" NUMBER, 
	"SAS_NO" NUMBER, 
	"CHEQUENO" VARCHAR2(20 BYTE), 
	"BDATE" DATE, 
	"BANK" VARCHAR2(50 BYTE), 
	"BBRANCH" VARCHAR2(100 BYTE), 
	"ACCNO" VARCHAR2(20 BYTE), 
	"AMOUNT" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ATTENDENT
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ATTENDENT" 
   (	"ATTENDENT_ID" NUMBER(*,0), 
	"A_DATE" DATE, 
	"PUNCH_IN" DATE, 
	"PUNCH_OUT" DATE, 
	"PUNCH_IN_NOTE" VARCHAR2(2000 BYTE), 
	"PUNCH_OUT_NOTE" VARCHAR2(2000 BYTE), 
	"EMP_ID" NUMBER(20,0), 
	"COLUMN1" VARCHAR2(20 BYTE), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ATTACHMENT
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ATTACHMENT" 
   (	"SELECT_FILE" VARCHAR2(20 BYTE), 
	"ATTACHED_ID" NUMBER, 
	"EMP_ID" NUMBER, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"SAS_NO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SOFTWARE_PACKAGES
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."SOFTWARE_PACKAGES" 
   (	"PK_ID" NUMBER, 
	"PK_NAME" VARCHAR2(100 BYTE), 
	"PATH" VARCHAR2(255 BYTE), 
	"CSSICON" VARCHAR2(255 BYTE), 
	"COLOR" VARCHAR2(255 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into SYSTEM.USER_TYPE
SET DEFINE OFF;
Insert into SYSTEM.USER_TYPE (CODE,USER_TYPE_DESCRIPTION) values (103,'SALES MANAGER');
Insert into SYSTEM.USER_TYPE (CODE,USER_TYPE_DESCRIPTION) values (101,'ADMIN');
Insert into SYSTEM.USER_TYPE (CODE,USER_TYPE_DESCRIPTION) values (105,'HR MANAGER');
Insert into SYSTEM.USER_TYPE (CODE,USER_TYPE_DESCRIPTION) values (104,'SALES USER');
Insert into SYSTEM.USER_TYPE (CODE,USER_TYPE_DESCRIPTION) values (106,'HR USER');
Insert into SYSTEM.USER_TYPE (CODE,USER_TYPE_DESCRIPTION) values (107,'ACCOUNT MANAGER');
Insert into SYSTEM.USER_TYPE (CODE,USER_TYPE_DESCRIPTION) values (108,'ACCOUNT USER');
Insert into SYSTEM.USER_TYPE (CODE,USER_TYPE_DESCRIPTION) values (109,'PAYROLL MANAGER');
Insert into SYSTEM.USER_TYPE (CODE,USER_TYPE_DESCRIPTION) values (110,'PAYROLL USER');
Insert into SYSTEM.USER_TYPE (CODE,USER_TYPE_DESCRIPTION) values (121,'HR ADMIN');
REM INSERTING into SYSTEM.STOCK
SET DEFINE OFF;
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (342,1,50,0,5,'SALES',to_date('27-MAY-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (343,1,50,0,4,'SALES',to_date('27-MAY-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (344,1,50,0,40,'SALES',to_date('27-MAY-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (361,1,50,0,10,'SALES',to_date('27-MAY-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (362,1,50,0,4,'SALES',to_date('27-MAY-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (364,1,50,0,10,'SALES',to_date('27-MAY-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (365,1,50,0,10,'SALES',to_date('27-MAY-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (366,1,50,0,2,'SALES',to_date('27-MAY-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (81,1,50,15,0,'GRN',to_date('27-MAY-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (381,1,41,0,1,'SALES',to_date('09-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (381,1,50,0,10,'SALES',to_date('09-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (382,1,50,0,1,'SALES',to_date('09-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (384,1,50,0,5,'SALES',to_date('09-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (385,1,41,0,10,'SALES',to_date('09-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (386,1,41,0,1,'SALES',to_date('09-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (390,1,50,0,5,'SALES',to_date('09-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (391,1,50,0,2,'SALES',to_date('09-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (101,1,50,1,0,'GRN',to_date('09-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (103,1,50,10,0,'GRN',to_date('09-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (103,1,41,100,0,'GRN',to_date('09-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (104,1,50,90,0,'GRN',to_date('09-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (401,1,61,0,3,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (401,1,64,0,5,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (401,1,62,0,1,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (401,1,50,0,1,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (401,1,68,0,2,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (402,1,64,0,1,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (402,1,61,0,1,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (402,1,50,0,1,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (403,1,50,0,1,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (403,1,61,0,1,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (404,1,63,0,1,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (404,1,62,0,2,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (121,1,41,100,0,'GRN',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (122,1,68,10,0,'GRN',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (122,1,67,2,0,'GRN',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (122,1,66,5,0,'GRN',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (122,1,65,10,0,'GRN',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (122,1,64,10,0,'GRN',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (122,1,63,10,0,'GRN',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (122,1,62,10,0,'GRN',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (122,1,41,5,0,'GRN',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (122,1,50,50,0,'GRN',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (123,1,61,10,0,'GRN',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (61,1,50,0,5,'PRN',to_date('27-MAY-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (341,1,50,0,2,'SALES',to_date('27-MAY-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (405,1,63,0,2,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (405,1,41,0,2,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (405,1,65,0,1,'SALES',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (124,1,41,9,0,'GRN',to_date('15-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (421,1,61,0,2,'SALES',to_date('16-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (421,1,41,0,1,'SALES',to_date('16-JUN-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (441,1,50,0,5,'SALES',to_date('12-JUL-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (441,1,66,0,5,'SALES',to_date('12-JUL-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (441,1,64,0,5,'SALES',to_date('12-JUL-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (441,1,61,0,1,'SALES',to_date('12-JUL-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (461,1,66,0,2,'SALES',to_date('17-AUG-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (461,1,61,0,1,'SALES',to_date('17-AUG-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (461,1,62,0,1,'SALES',to_date('17-AUG-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (141,1,64,20,0,'GRN',to_date('17-AUG-15','DD-MON-RR'));
Insert into SYSTEM.STOCK (TRANSNO,SAS_NO,ITEM_CODE,IN_QTY,OUT_QTY,TRANS_TYPE,TRANS_DATE) values (141,1,66,10,0,'GRN',to_date('17-AUG-15','DD-MON-RR'));
REM INSERTING into SYSTEM.SUPPLIER
SET DEFINE OFF;
Insert into SYSTEM.SUPPLIER (SUP_CODE,SUP_NAME,ADDRESS,EMAIL,CONTACT_NO,SAS_NO) values ('002','Kamal Perera','Colombo','kamal@gmail.com','0125478555',1);
Insert into SYSTEM.SUPPLIER (SUP_CODE,SUP_NAME,ADDRESS,EMAIL,CONTACT_NO,SAS_NO) values ('001','Ravindra Warnasooriya','Meddegama , Halmillawewa , Kurunegala','warnasooriya.ravindra@gmail.com','0788757284',1);
Insert into SYSTEM.SUPPLIER (SUP_CODE,SUP_NAME,ADDRESS,EMAIL,CONTACT_NO,SAS_NO) values ('005','Asanka','Mahiyanganaya ','abc@1212.lk','121345',1);
Insert into SYSTEM.SUPPLIER (SUP_CODE,SUP_NAME,ADDRESS,EMAIL,CONTACT_NO,SAS_NO) values ('56','Ravindra ','Meddegama','ravi@gmail.com','2342346',1);
Insert into SYSTEM.SUPPLIER (SUP_CODE,SUP_NAME,ADDRESS,EMAIL,CONTACT_NO,SAS_NO) values ('7989','Samith Athtanayake','Badulla','info@rtvehicle.lk','087555554',1);
REM INSERTING into SYSTEM.USER_PERMISSION
SET DEFINE OFF;
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,1,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,2,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,3,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,4,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,5,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,6,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,7,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,8,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,9,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,10,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,12,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,13,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,14,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,15,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,16,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,16,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (4,17,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (4,18,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (1,19,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (3,20,101,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,1,103,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,2,103,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,3,103,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,4,103,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,5,103,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,6,103,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,7,103,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,8,103,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,10,103,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,16,103,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,1,121,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,2,121,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,3,121,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,4,121,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,5,121,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,16,121,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (3,20,121,1);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,1,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,2,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,3,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,4,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,5,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,6,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,7,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,8,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,9,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,10,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,12,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,13,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,14,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,15,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,16,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,16,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (4,17,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (4,18,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (1,19,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (3,20,101,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,1,103,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,2,103,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,3,103,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,4,103,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,5,103,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,6,103,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,7,103,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,8,103,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,10,103,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,16,103,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,1,121,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,2,121,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,3,121,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,4,121,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,5,121,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,16,121,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (3,20,121,2);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,1,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,2,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,3,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,4,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,5,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,6,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,7,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,8,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,9,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,10,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,12,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,13,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,14,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,15,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,16,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,16,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (4,17,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (4,18,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (1,19,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (3,20,101,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,2,103,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,3,103,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,4,103,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,5,103,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,6,103,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,7,103,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,8,103,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,10,103,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,16,103,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,1,121,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,2,121,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,3,121,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,4,121,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,5,121,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,16,121,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (3,20,121,3);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,1,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,2,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,3,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,4,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,5,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,6,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,7,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,8,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,9,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,10,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,12,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,13,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,14,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,15,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,16,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (5,16,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (4,17,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (4,18,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (1,19,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (3,20,101,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,2,103,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,3,103,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,4,103,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,5,103,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,6,103,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,7,103,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,8,103,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,10,103,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,16,103,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,1,121,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,2,121,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,3,121,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,4,121,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,5,121,4);
Insert into SYSTEM.USER_PERMISSION (PK_ID,MD_ID,USER_GROUP_ID,PERMISION_TYPE) values (2,16,121,4);
REM INSERTING into SYSTEM.WORK_EXPERIENCE
SET DEFINE OFF;
Insert into SYSTEM.WORK_EXPERIENCE (COMPANY,JOB_TITLE,W_FROM,W_TO,COMMENTS,EXPERIENCE_ID,EMP_ID,SAS_NO) values ('ewqw','qweqw',to_date('08-JUL-23','DD-MON-RR'),to_date('08-JUL-31','DD-MON-RR'),' asds',1,4,null);
REM INSERTING into SYSTEM.SOFTWARE_MODULES
SET DEFINE OFF;
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (2,1,'Items','../Inventory/item.jsp','fa fa-indent fa-fw','aqua');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (2,3,'Supplier','../Inventory/supplier.jsp','fa fa-user fa-fw','green');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (2,2,'Item Category','../Inventory/itemcategory.jsp','fa fa-trello fa-fw','yellow');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (2,4,'Customer','../Inventory/customer.jsp','fa fa-users fa-fw','red');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (2,5,'Sales','../Inventory/sales.jsp','fa fa-exchange fa-fw','fuchsia');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (2,6,'Purchase','../Inventory/grn.jsp','fa fa-openid fa-fw','purple');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (2,7,'Sales Return','../Inventory/salesReturn.jsp','fa fa-rotate-left fa-fw','orange');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (2,8,'Purchase Return','../Inventory/purchaseReturn.jsp','fa fa-retweet fa-fw','teal');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (2,9,'Opening Stock','../Inventory/operningStock.jsp','fa fa-steam-square fa-fw','navy');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (2,10,'Report','../Inventory/inventoryReport.jsp','fa fa-file-pdf-o fa-fw','lime');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (4,17,'Personal Details','../HR/Employee_Container.jsp','fa fa-user fa-fw','green');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (5,12,'User Groups','../AdminPanel/usergroup.jsp','fa fa-indent fa-fw','yellow');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (5,13,'User Account','../AdminPanel/user.jsp','fa fa-user fa-fw','red');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (5,14,'Software Modules','../AdminPanel/softwaremodules.jsp','fa fa-trello fa-fw','blue');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (5,15,'User Permission','../AdminPanel/userPermission.jsp','fa fa-trello fa-fw','green');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (5,16,'Messages','../AdminPanel/messages.jsp','fa fa-indent fa-fw','gray');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (2,16,'Messages','../AdminPanel/messages.jsp','fa fa-indent fa-fw','gray');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (4,18,'Leave','../HR/Leave_Container.jsp','fa fa-openid fa-fw','purple');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (1,19,'Settings','../Accounts/Settings.jsp','ion ion-ios7-thunderstorm-outline','green');
Insert into SYSTEM.SOFTWARE_MODULES (PK_ID,M_ID,MODULE_NAME,URL,ICON_CSS,COLOR) values (3,20,'Update Loan','payroll/Adding_longes.jsp','ion ion-ios7-thunderstorm-outline','green');
REM INSERTING into SYSTEM.SKILLS
SET DEFINE OFF;
Insert into SYSTEM.SKILLS (SKILL,YEARS_OF_EXPERIENCE,COMMENTS,SKILL_ID,EMP_ID,SAS_NO) values ('SDAS',2,' asdasdasd',1,4,null);
REM INSERTING into SYSTEM.SETTING
SET DEFINE OFF;
Insert into SYSTEM.SETTING (ETF,EPF,NO,ALLOWNCE) values ('3','4',1,null);
REM INSERTING into SYSTEM.SAS
SET DEFINE OFF;
Insert into SYSTEM.SAS (SAS_NO,DESCRIPTION,ADDRESS,TELNO,WEB,FAX) values (1,'Sri Lanka Furniture Pvt (ltd)','Galigamuwa','05528754215','srilankafurniture.lk','05528754215');
REM INSERTING into SYSTEM.SALES_TYPES
SET DEFINE OFF;
Insert into SYSTEM.SALES_TYPES (CODE,DESCRIPTION) values (1,'CASH');
Insert into SYSTEM.SALES_TYPES (CODE,DESCRIPTION) values (2,'CREDIT');
Insert into SYSTEM.SALES_TYPES (CODE,DESCRIPTION) values (3,'CHEQUES');
Insert into SYSTEM.SALES_TYPES (CODE,DESCRIPTION) values (4,'CREDITCARD');
Insert into SYSTEM.SALES_TYPES (CODE,DESCRIPTION) values (5,'MIX TYPE');
REM INSERTING into SYSTEM.SALES_SUMMURY_MONTH_WISE_TBL
SET DEFINE OFF;
REM INSERTING into SYSTEM.SALES_SUM
SET DEFINE OFF;
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (343,'001',to_date('01-JUN-15','DD-MON-RR'),5,26000,0,26000,23500,1,0,0,2500);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (344,'122212',to_date('01-JUN-15','DD-MON-RR'),1,259998,0,259998,259998,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (361,'01',to_date('02-JUN-15','DD-MON-RR'),1,60000,0,60000,60000,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (362,'wer234',to_date('02-JUN-15','DD-MON-RR'),5,19500,0,19500,0,1,4500,0,15000);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (364,'01',to_date('02-JUN-15','DD-MON-RR'),5,64980,0,64980,4980,1,0,60000,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (365,'01',to_date('01-JUL-15','DD-MON-RR'),5,65000,0,65000,50000,1,6000,5500,3500);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (366,'01',to_date('01-JUL-15','DD-MON-RR'),5,12350,0,12350,11150,1,0,1200,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (381,'01',to_date('09-JUN-15','DD-MON-RR'),5,71500,0,71500,60000,1,10000,1000,500);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (382,'01',to_date('09-JUN-15','DD-MON-RR'),1,6500,0,6500,6500,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (384,'001',to_date('09-JUN-15','DD-MON-RR'),1,32500,0,32500,32500,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (385,'122212',to_date('09-JUN-15','DD-MON-RR'),1,65000,0,65000,65000,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (386,'01',to_date('09-JUN-15','DD-MON-RR'),1,6500,0,6500,6500,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (390,'01',to_date('09-JUN-15','DD-MON-RR'),1,32500,0,32500,32500,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (391,'01',to_date('09-JUN-15','DD-MON-RR'),1,13000,0,13000,13000,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (401,'wer234',to_date('15-JUN-15','DD-MON-RR'),1,38000,0,38000,38000,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (402,'13',to_date('15-JUN-15','DD-MON-RR'),1,12000,0,12000,12000,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (403,'13',to_date('15-JUN-15','DD-MON-RR'),1,8750,0,8750,8750,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (404,'001',to_date('15-JUN-15','DD-MON-RR'),4,12350,0,12350,0,1,0,12350,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (405,'01',to_date('15-JUN-15','DD-MON-RR'),5,29100,0,29100,10000,1,2500,6600,10000);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (421,'01',to_date('16-JUN-15','DD-MON-RR'),1,11500,0,11500,11500,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (441,'001',to_date('12-JUL-15','DD-MON-RR'),5,84140,0,84140,55640,1,2500,25000,1000);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (461,'CASH',to_date('17-AUG-15','DD-MON-RR'),5,18660,0,18660,9000,1,8000,1000,660);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (341,'01',to_date('24-MAY-15','DD-MON-RR'),1,12998,0,12998,12998,1,0,0,0);
Insert into SYSTEM.SALES_SUM (INVOICE_NO,CUS_CODE,DDATE,SALES_TYPE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,CASH,SAS_NO,CHEQUES,CREDITCARD,CREDIT) values (342,'01',to_date('24-MAY-15','DD-MON-RR'),1,32498,0,32498,32498,1,0,0,0);
REM INSERTING into SYSTEM.SALES_RETURN_SUM
SET DEFINE OFF;
REM INSERTING into SYSTEM.SALES_RETURN_DETAILS
SET DEFINE OFF;
REM INSERTING into SYSTEM.SALES_DETAILS
SET DEFINE OFF;
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,2,13000,0,12998,1,341,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,5,32500,0,32498,1,342,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,4,26000,0,26000,1,343,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,40,260000,0,259998,1,344,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,10,65000,0,60000,1,361,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,4,26000,0,19500,1,362,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,10,65000,0,64980,1,364,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,10,65000,0,65000,1,365,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,2,13000,0,12350,1,366,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,1,6500,0,71500,1,381,41);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,10,65000,0,71500,1,381,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,1,6500,0,6500,1,382,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,5,32500,0,32500,1,384,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,10,65000,0,65000,1,385,41);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,1,6500,0,6500,1,386,41);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,5,32500,0,32500,1,390,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,2,13000,0,13000,1,391,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (2500,1950,3,7500,0,38000,1,401,61);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (3250,2850,5,16250,0,38000,1,401,64);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (3000,2500,1,3000,0,38000,1,401,62);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,1,6500,0,38000,1,401,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (2500,1540,2,5000,0,38000,1,401,68);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (3250,2850,1,3250,0,12000,1,402,64);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (2500,1950,1,2500,0,12000,1,402,61);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,1,6500,0,12000,1,402,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,1,6500,0,8750,1,403,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (2500,1950,1,2500,0,8750,1,403,61);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,5400,1,6500,0,12350,1,404,63);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (3000,2500,2,6000,150,12350,1,404,62);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,5400,2,13000,500,29100,1,405,63);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,2,13000,0,29100,1,405,41);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (3150,2500,1,3150,0,29100,1,405,65);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (2500,1950,2,5000,0,11500,1,421,61);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,5000,1,6500,0,11500,1,421,41);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6500,4800,5,32500,10,84140,1,441,50);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6580,4850,5,32900,0,84140,1,441,66);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (3250,2850,5,16250,0,84140,1,441,64);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (2500,1950,1,2500,0,84140,1,441,61);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (6580,4850,2,13160,0,18660,1,461,66);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (2500,1950,1,2500,0,18660,1,461,61);
Insert into SYSTEM.SALES_DETAILS (SPRICE,PPRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO,INVOICENO,ITEMCODE) values (3000,2500,1,3000,0,18660,1,461,62);
REM INSERTING into SYSTEM.SALARY
SET DEFINE OFF;
Insert into SYSTEM.SALARY (BASIC_SALARY,PAY_FREQUENCY,COMMENTS,POSITION,EMP_ID,SALARY_ID,SAS_NO) values (8500,'30 Days',null,'33',1,5,1);
Insert into SYSTEM.SALARY (BASIC_SALARY,PAY_FREQUENCY,COMMENTS,POSITION,EMP_ID,SALARY_ID,SAS_NO) values (65000,'15Days',null,'Head',61,3,1);
Insert into SYSTEM.SALARY (BASIC_SALARY,PAY_FREQUENCY,COMMENTS,POSITION,EMP_ID,SALARY_ID,SAS_NO) values (75000,'15 Days',null,'2',41,4,1);
REM INSERTING into SYSTEM.PURCHASE_RETURN
SET DEFINE OFF;
Insert into SYSTEM.PURCHASE_RETURN (PRNNO,SUP_CODE,DDATE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,SAS_NO) values (41,'001',to_date('23-APR-15','DD-MON-RR'),23998,0,23998,1);
Insert into SYSTEM.PURCHASE_RETURN (PRNNO,SUP_CODE,DDATE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,SAS_NO) values (21,'001',to_date('09-APR-15','DD-MON-RR'),24000,0,24000,1);
Insert into SYSTEM.PURCHASE_RETURN (PRNNO,SUP_CODE,DDATE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,SAS_NO) values (61,'001',to_date('23-MAY-15','DD-MON-RR'),0,0,0,1);
REM INSERTING into SYSTEM.PRN_DETAILS
SET DEFINE OFF;
Insert into SYSTEM.PRN_DETAILS (PRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (61,50,4800,5,24000,0,0,1);
REM INSERTING into SYSTEM.PHOTOGRAPH
SET DEFINE OFF;
Insert into SYSTEM.PHOTOGRAPH (P_NUMBER,EMP_ID,PHOTO,SAS_NO) values (21,61,'61.jpg',null);
Insert into SYSTEM.PHOTOGRAPH (P_NUMBER,EMP_ID,PHOTO,SAS_NO) values (1,4,'4.jpg',null);
REM INSERTING into SYSTEM.PERSONAL_DETAILS
SET DEFINE OFF;
Insert into SYSTEM.PERSONAL_DETAILS (FIRST_NAME,MIDDLE_NAME,LAST_NAME,EMPLOYEE_ID,USER_TYPE,NIC,ISSU_DATE,MARITAL_STATUS,NATIONALITY,DATE_OF_BIRTH,NICK_NAME,SMOKER,MILITARY_SERVICE,GENDER,EMPLOYEE_NAME,RELIGION,SAS_NO) values ('ddsd','df','dsf',1,'A002',44324,to_date('18-JUN-15','DD-MON-RR'),'rwe',null,null,null,null,null,null,null,null,1);
Insert into SYSTEM.PERSONAL_DETAILS (FIRST_NAME,MIDDLE_NAME,LAST_NAME,EMPLOYEE_ID,USER_TYPE,NIC,ISSU_DATE,MARITAL_STATUS,NATIONALITY,DATE_OF_BIRTH,NICK_NAME,SMOKER,MILITARY_SERVICE,GENDER,EMPLOYEE_NAME,RELIGION,SAS_NO) values ('Wayaman','Ravindra','Warnasooriya',4,'A00',872523197,to_date('08-JAN-15','DD-MON-RR'),'Married','Sinhalese',to_date('08-JAN-23','DD-MON-RR'),'ravi',null,'NO','Male','Wayaman Ravindra Warnasooriya','Buddhist',1);
Insert into SYSTEM.PERSONAL_DETAILS (FIRST_NAME,MIDDLE_NAME,LAST_NAME,EMPLOYEE_ID,USER_TYPE,NIC,ISSU_DATE,MARITAL_STATUS,NATIONALITY,DATE_OF_BIRTH,NICK_NAME,SMOKER,MILITARY_SERVICE,GENDER,EMPLOYEE_NAME,RELIGION,SAS_NO) values ('Asanka','Sampath','Sandaruwan',41,'A00',23423,to_date('08-JUL-23','DD-MON-RR'),'Married','Sinhalese',to_date('07-JUL-21','DD-MON-RR'),'Asadfs',null,'rwerwe','Male','Asanka Sampath Sandaruwan','Buddhist',1);
Insert into SYSTEM.PERSONAL_DETAILS (FIRST_NAME,MIDDLE_NAME,LAST_NAME,EMPLOYEE_ID,USER_TYPE,NIC,ISSU_DATE,MARITAL_STATUS,NATIONALITY,DATE_OF_BIRTH,NICK_NAME,SMOKER,MILITARY_SERVICE,GENDER,EMPLOYEE_NAME,RELIGION,SAS_NO) values ('Saaman','Bandara','Jayathilaka',61,'A00',34243242,to_date('08-JUL-22','DD-MON-RR'),'Married','Sinhalese',to_date('08-JUL-30','DD-MON-RR'),'saman',null,'adsd','Male','Saaman Bandara Jayathilaka','Buddhist',null);
REM INSERTING into SYSTEM.OPERNING_STOCK
SET DEFINE OFF;
REM INSERTING into SYSTEM.MESSAGES
SET DEFINE OFF;
Insert into SYSTEM.MESSAGES (ID,MFROM,MTO,MESSAGEBODY,DDATE,STATUS) values (21,'amila','asanka',' Hi Kohomada','08-21-2015 : 2 : 21 : 17 - PM',1);
Insert into SYSTEM.MESSAGES (ID,MFROM,MTO,MESSAGEBODY,DDATE,STATUS) values (22,'asanka','amila','hodin innawa macho','08-21-2015 : 2 : 21 : 47 - PM',1);
Insert into SYSTEM.MESSAGES (ID,MFROM,MTO,MESSAGEBODY,DDATE,STATUS) values (23,'asanka','amila','how','08-22-2015 : 2 : 22 : 0 - PM',1);
Insert into SYSTEM.MESSAGES (ID,MFROM,MTO,MESSAGEBODY,DDATE,STATUS) values (41,'ravi','asanka','Hellow ','12-45-2015 : 1 : 45 : 27 - PM',1);
Insert into SYSTEM.MESSAGES (ID,MFROM,MTO,MESSAGEBODY,DDATE,STATUS) values (61,'asanka','asanka',' Hi','15-45-2015 : 3 : 45 : 10 - PM',1);
Insert into SYSTEM.MESSAGES (ID,MFROM,MTO,MESSAGEBODY,DDATE,STATUS) values (81,'asanka','kamal',' Hi HR ADMIN','16-49-2015 : 11 : 49 : 6 - AM',0);
Insert into SYSTEM.MESSAGES (ID,MFROM,MTO,MESSAGEBODY,DDATE,STATUS) values (101,'asanka','asanka',' ss','17-09-2015 : 6 : 9 : 14 - PM',1);
Insert into SYSTEM.MESSAGES (ID,MFROM,MTO,MESSAGEBODY,DDATE,STATUS) values (2,'asanka','asanka','Hi ','28-11-2015 : 1 : 11 : 5 - PM',1);
REM INSERTING into SYSTEM.MEMBERSHIP
SET DEFINE OFF;
REM INSERTING into SYSTEM.LOAN_BALANCE
SET DEFINE OFF;
Insert into SYSTEM.LOAN_BALANCE (PAY_ID,AMMOUNT,EMPLOYEE_ID,LOAN_ID,BALANCE) values (1,100000,102,461,2500);
Insert into SYSTEM.LOAN_BALANCE (PAY_ID,AMMOUNT,EMPLOYEE_ID,LOAN_ID,BALANCE) values (22,100000,122,321,2750);
Insert into SYSTEM.LOAN_BALANCE (PAY_ID,AMMOUNT,EMPLOYEE_ID,LOAN_ID,BALANCE) values (2,10000,61,2,2500);
REM INSERTING into SYSTEM.LICENSE
SET DEFINE OFF;
REM INSERTING into SYSTEM.LEAVE
SET DEFINE OFF;
Insert into SYSTEM.LEAVE (LEAVE_TYPE,LEAVE_BALANCE,NUMBERS_OF_DATE,FROM_DATE,TO_DATE,COMMENTS,LEAVE_ID,EMP_ID,STATUS,ACTION,SAS_NO) values ('Notwel',null,0,to_date('17-JUN-15','DD-MON-RR'),to_date('18-JUN-15','DD-MON-RR'),null,61,4,1,null,null);
Insert into SYSTEM.LEAVE (LEAVE_TYPE,LEAVE_BALANCE,NUMBERS_OF_DATE,FROM_DATE,TO_DATE,COMMENTS,LEAVE_ID,EMP_ID,STATUS,ACTION,SAS_NO) values ('Sick Leave',null,0,to_date('06-DEC-18','DD-MON-RR'),to_date('06-DEC-23','DD-MON-RR'),'  not well',62,41,0,null,null);
Insert into SYSTEM.LEAVE (LEAVE_TYPE,LEAVE_BALANCE,NUMBERS_OF_DATE,FROM_DATE,TO_DATE,COMMENTS,LEAVE_ID,EMP_ID,STATUS,ACTION,SAS_NO) values ('Notwell',null,0,to_date('17-JUN-15','DD-MON-RR'),to_date('19-JUN-15','DD-MON-RR'),null,63,4,1,null,null);
Insert into SYSTEM.LEAVE (LEAVE_TYPE,LEAVE_BALANCE,NUMBERS_OF_DATE,FROM_DATE,TO_DATE,COMMENTS,LEAVE_ID,EMP_ID,STATUS,ACTION,SAS_NO) values ('vacation Leave',null,0,to_date('05-DEC-20','DD-MON-RR'),to_date('06-DEC-30','DD-MON-RR'),' adsdsa',48,41,1,null,null);
REM INSERTING into SYSTEM.LANGUAGES
SET DEFINE OFF;
Insert into SYSTEM.LANGUAGES (LANGUAGE,FLUENCY,COMPETENCY,LAN_ID,EMP_ID,COMMENTS,SAS_NO) values ('Tamil','Good Writing,Speaking,Reading','Second Language',3,4,'sdfsdfsdfsdfds',null);
REM INSERTING into SYSTEM.JOB
SET DEFINE OFF;
Insert into SYSTEM.JOB (JOB_TITLE,JOB_SPECIFICATION,EMPLOYMENT_STATUS,JOB_CATEGORY,JOINED_DATE,SUB_UNIT,LOCATION,JOB_ID,EMP_ID,SAS_NO) values ('Software Engineer','SE','1','PERMENENT',to_date('11-MAY-15','DD-MON-RR'),'1',null,1,61,1);
REM INSERTING into SYSTEM.ITEMS
SET DEFINE OFF;
Insert into SYSTEM.ITEMS (CODE,NAME,COST,SPRICE,BARCODE,REORDER_LEVEL,SUP_CODE,SAS_NO,CAT_CODE) values (50,'CLIP SIDE TABLE',4800,6500,'234534',10,'001',1,1);
Insert into SYSTEM.ITEMS (CODE,NAME,COST,SPRICE,BARCODE,REORDER_LEVEL,SUP_CODE,SAS_NO,CAT_CODE) values (41,'KAMI TABLE',5000,6500,'2500355',10,'001',1,1);
Insert into SYSTEM.ITEMS (CODE,NAME,COST,SPRICE,BARCODE,REORDER_LEVEL,SUP_CODE,SAS_NO,CAT_CODE) values (61,'POCKET CHAIR',1950,2500,'2342342',5,'001',1,81);
Insert into SYSTEM.ITEMS (CODE,NAME,COST,SPRICE,BARCODE,REORDER_LEVEL,SUP_CODE,SAS_NO,CAT_CODE) values (62,'SILA CHAIR',2500,3000,'454654645',5,'001',1,81);
Insert into SYSTEM.ITEMS (CODE,NAME,COST,SPRICE,BARCODE,REORDER_LEVEL,SUP_CODE,SAS_NO,CAT_CODE) values (63,'SILA STOOL',5400,6500,'13545',5,'001',1,81);
Insert into SYSTEM.ITEMS (CODE,NAME,COST,SPRICE,BARCODE,REORDER_LEVEL,SUP_CODE,SAS_NO,CAT_CODE) values (64,'DRIFTED STOOL',2850,3250,'798897897',5,'001',1,81);
Insert into SYSTEM.ITEMS (CODE,NAME,COST,SPRICE,BARCODE,REORDER_LEVEL,SUP_CODE,SAS_NO,CAT_CODE) values (65,'TWO TONE ARMCHAIR',2500,3150,'56566656',5,'002',1,81);
Insert into SYSTEM.ITEMS (CODE,NAME,COST,SPRICE,BARCODE,REORDER_LEVEL,SUP_CODE,SAS_NO,CAT_CODE) values (66,'BRIDGE BENCH',4850,6580,'646546',5,'002',1,81);
Insert into SYSTEM.ITEMS (CODE,NAME,COST,SPRICE,BARCODE,REORDER_LEVEL,SUP_CODE,SAS_NO,CAT_CODE) values (67,'BRIDGE TABLE',7500,8500,'313515',5,'001',1,81);
Insert into SYSTEM.ITEMS (CODE,NAME,COST,SPRICE,BARCODE,REORDER_LEVEL,SUP_CODE,SAS_NO,CAT_CODE) values (68,'CENTANNI',1540,2500,'5646',5,'002',1,81);
Insert into SYSTEM.ITEMS (CODE,NAME,COST,SPRICE,BARCODE,REORDER_LEVEL,SUP_CODE,SAS_NO,CAT_CODE) values (81,'NEW ITEM',2500,3500,'313121',15,'001',1,1);
REM INSERTING into SYSTEM.ITEM_CATEGORY
SET DEFINE OFF;
Insert into SYSTEM.ITEM_CATEGORY (CAT_NAME,SAS_NO,CAT_CODE) values ('TABLE',1,1);
Insert into SYSTEM.ITEM_CATEGORY (CAT_NAME,SAS_NO,CAT_CODE) values ('Next Category',1,22);
Insert into SYSTEM.ITEM_CATEGORY (CAT_NAME,SAS_NO,CAT_CODE) values ('Cat 2',1,3);
Insert into SYSTEM.ITEM_CATEGORY (CAT_NAME,SAS_NO,CAT_CODE) values ('ABC',1,512);
Insert into SYSTEM.ITEM_CATEGORY (CAT_NAME,SAS_NO,CAT_CODE) values ('3435',1,21);
Insert into SYSTEM.ITEM_CATEGORY (CAT_NAME,SAS_NO,CAT_CODE) values ('adadasdad',1,41);
Insert into SYSTEM.ITEM_CATEGORY (CAT_NAME,SAS_NO,CAT_CODE) values ('FREt',1,61);
Insert into SYSTEM.ITEM_CATEGORY (CAT_NAME,SAS_NO,CAT_CODE) values ('CHAIR',1,81);
REM INSERTING into SYSTEM.IMMIGRATION
SET DEFINE OFF;
Insert into SYSTEM.IMMIGRATION (DOCUMENT,I_NUMBER,ISSUED_DATE,EXPIRY_DATE,ELIGIBLE_STATUS,ISSUED_BY,ELIGIBLE_REVIEW_DATE,COMMENTS,EMP_ID,SAS_NO) values ('Passport',1,to_date('06-DEC-22','DD-MON-RR'),to_date('06-DEC-29','DD-MON-RR'),'da','sdas',to_date('06-DEC-30','DD-MON-RR'),' adasd',4,null);
REM INSERTING into SYSTEM.HELP
SET DEFINE OFF;
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@',2,' @ ("at" sign)');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@',3,' -------------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@',4,' Runs the SQL*Plus statements in the specified script. The script can be');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@',5,' called from the local file system or a web server.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@',7,' @ {url|file_name[.ext]} [arg ...]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@',9,' where url supports HTTP and FTP protocols in the form:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@',11,'    http://host.domain/script.sql');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@',12,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@@',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@@',2,' @@ (double "at" sign)');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@@',3,' ---------------------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@@',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@@',5,' Runs the specified script. This command is almost identical to');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@@',6,' the @ command. It is useful for running nested scripts because it');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@@',7,' has the additional functionality of looking for the nested script');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@@',8,' in the same url or path as the calling script.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@@',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@@',10,' @@ {url|file_name[.ext]} [arg ...]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('@@',11,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('/',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('/',2,' / (slash)');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('/',3,' ---------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('/',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('/',5,' Executes the most recently executed SQL command or PL/SQL block');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('/',6,' which is stored in the SQL buffer. Use slash (/) at the command');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('/',7,' prompt or line number prompt in SQL*Plus command line. The buffer');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('/',8,' has no command history and does not record SQL*Plus commands.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('/',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('/',10,' /');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('/',11,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ACCEPT',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ACCEPT',2,' ACCEPT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ACCEPT',3,' ------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ACCEPT',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ACCEPT',5,' Reads a line of input and stores it in a given substitution variable.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ACCEPT',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ACCEPT',7,' ACC[EPT] variable [NUM[BER] | CHAR | DATE | BINARY_FLOAT | BINARY_DOUBLE]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ACCEPT',8,' [FOR[MAT] format] [DEF[AULT] default] [PROMPT text | NOPR[OMPT]] [HIDE]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ACCEPT',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('APPEND',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('APPEND',2,' APPEND');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('APPEND',3,' ------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('APPEND',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('APPEND',5,' Adds text to the end of the current line in the SQL buffer.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('APPEND',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('APPEND',7,' A[PPEND] text');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('APPEND',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',2,' ARCHIVE LOG');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',3,' -----------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',5,' Displays information about redo log files.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',7,' ARCHIVE LOG LIST');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',2,' ATTRIBUTE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',3,' ---------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',5,' Specifies display characteristics for a given attribute of an Object Type');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',6,' column, such as the format of NUMBER data. Columns and attributes should');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',7,' not have the same names as they share a common namespace. Lists the');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',8,' current display characteristics for a single attribute or all attributes.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',10,' ATTRIBUTE [type_name.attribute_name [option ... ]]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',11,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',12,' where option represents one of the following terms or clauses:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',13,'     ALI[AS] alias');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',14,'     CLE[AR]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',15,'     FOR[MAT] format');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',16,'     LIKE {type_name.attribute_name | alias}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',17,'     ON|OFF');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',18,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',2,' BREAK');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',3,' -----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',5,' Specifies where changes occur in a report and the formatting');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',6,' action to perform, such as:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',7,' - suppressing display of duplicate values for a given column');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',8,' - skipping a line each time a given column value changes');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',9,' - printing computed figures each time a given column value');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',10,'   changes or at the end of the report.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',11,' Enter BREAK with no clauses to list the current BREAK definition.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',12,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',13,' BRE[AK] [ON report_element [action [action]]] ...');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',14,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',15,' where report_element has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',16,'     {column | expression | ROW | REPORT}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',17,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',18,' and where action has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',19,'     [SKI[P] n | [SKI[P]] PAGE] [NODUP[LICATES] | DUP[LICATES]]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BREAK',20,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',2,' BTITLE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',3,' ------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',5,' Places and formats a specified title at the bottom of each report');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',6,' page, or lists the current BTITLE definition.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',8,' BTI[TLE] [printspec [text|variable] ...] | [OFF|ON]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',10,' where printspec represents one or more of the following clauses:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',11,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',12,'     COL n          LE[FT]        BOLD');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',13,'     S[KIP] [n]     CE[NTER]      FORMAT text');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',14,'     TAB n          R[IGHT]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('BTITLE',15,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CHANGE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CHANGE',2,' CHANGE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CHANGE',3,' ------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CHANGE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CHANGE',5,' Changes the first occurrence of the specified text on the current');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CHANGE',6,' line of the SQL buffer. The buffer has no command history list and');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CHANGE',7,' does not record SQL*Plus commands.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CHANGE',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CHANGE',9,' C[HANGE] sepchar old [sepchar [new[sepchar]]]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CHANGE',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',2,' CLEAR');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',3,' -----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',5,' Resets or erases the current value or setting for the specified option.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',7,' CL[EAR] option ...');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',9,' where option represents one of the following clauses:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',10,'     BRE[AKS]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',11,'     BUFF[ER]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',12,'     COL[UMNS]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',13,'     COMP[UTES]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',14,'     SCR[EEN]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',15,'     SQL');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',16,'     TIMI[NG]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CLEAR',17,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',2,' COLUMN');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',3,' ------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',5,' Specifies display attributes for a given column, such as:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',6,'     - text for the column heading');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',7,'     - alignment for the column heading');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',8,'     - format for NUMBER data');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',9,'     - wrapping of column data');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',10,' Also lists the current display attributes for a single column');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',11,' or all columns.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',12,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',13,' COL[UMN] [{column | expr} [option ...] ]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',14,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',15,' where option represents one of the following clauses:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',16,'     ALI[AS] alias');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',17,'     CLE[AR]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',18,'     ENTMAP {ON|OFF}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',19,'     FOLD_A[FTER]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',20,'     FOLD_B[EFORE]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',21,'     FOR[MAT] format');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',22,'     HEA[DING] text');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',23,'     JUS[TIFY] {L[EFT] | C[ENTER] | R[IGHT]}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',24,'     LIKE {expr | alias}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',25,'     NEWL[INE]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',26,'     NEW_V[ALUE] variable');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',27,'     NOPRI[NT] | PRI[NT]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',28,'     NUL[L] text');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',29,'     OLD_V[ALUE] variable');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',30,'     ON|OFF');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',31,'     WRA[PPED] | WOR[D_WRAPPED] | TRU[NCATED]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COLUMN',32,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COMPUTE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COMPUTE',2,' COMPUTE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COMPUTE',3,' -------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COMPUTE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COMPUTE',5,' In combination with the BREAK command, calculates and prints');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COMPUTE',6,' summary lines using various standard computations. Also lists');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COMPUTE',7,' all COMPUTE definitions.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COMPUTE',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COMPUTE',9,' COMP[UTE] [function [LAB[EL] text] ...');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COMPUTE',10,'   OF {expr|column|alias} ...');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COMPUTE',11,'   ON {expr|column|alias|REPORT|ROW} ...]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COMPUTE',12,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',2,' CONNECT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',3,' -------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',5,' Connects a given username to the Oracle Database. When you run a');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',6,' CONNECT command, the site profile, glogin.sql, and the user profile,');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',7,' login.sql, are processed in that order. CONNECT does not reprompt');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',8,' for username or password if the initial connection does not succeed.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',10,' CONN[ECT] [{logon|/|proxy} [AS {SYSOPER|SYSDBA|SYSASM}] [edition=value]]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',11,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',12,' where logon has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',13,'     username[/password][@connect_identifier]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',14,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',15,' where proxy has the syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',16,'     proxyuser[username][/password][@connect_identifier]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',17,' NOTE: Brackets around username in proxy are required syntax');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('CONNECT',18,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',2,' COPY');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',3,' ----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',5,' Copies data from a query to a table in the same or another');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',6,' database. COPY supports CHAR, DATE, LONG, NUMBER and VARCHAR2.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',8,' COPY {FROM database | TO database | FROM database TO database}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',9,'            {APPEND|CREATE|INSERT|REPLACE} destination_table');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',10,'            [(column, column, column, ...)] USING query');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',11,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',12,' where database has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',13,'     username[/password]@connect_identifier');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('COPY',14,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEFINE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEFINE',2,' DEFINE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEFINE',3,' ------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEFINE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEFINE',5,' Specifies a substitution variable and assigns a CHAR value to it, or');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEFINE',6,' lists the value and variable type of a single variable or all variables.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEFINE',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEFINE',8,' DEF[INE] [variable] | [variable = text]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEFINE',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEL',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEL',2,' DEL');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEL',3,' ---');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEL',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEL',5,' Deletes one or more lines of the SQL buffer. The buffer has no');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEL',6,' command history list and does not record SQL*Plus commands.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEL',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEL',8,' DEL [n | n m | n * | n LAST | * | * n | * LAST | LAST]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DEL',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',2,' DESCRIBE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',3,' --------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',5,' Lists the column definitions for a table, view, or synonym,');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',6,' or the specifications for a function or procedure.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',8,' DESC[RIBE] {[schema.]object[@connect_identifier]}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',2,' DISCONNECT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',3,' ----------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',5,' Commits pending changes to the database and logs the current');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',6,' user out of Oracle, but does not exit SQL*Plus.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',7,' In SQL*Plus command line, use EXIT or QUIT to log out of Oracle');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',8,' and return control to your computer''s operating system.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',10,' DISC[ONNECT]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',11,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EDIT',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EDIT',2,' EDIT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EDIT',3,' ----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EDIT',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EDIT',5,' Invokes an operating system text editor on the contents of the');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EDIT',6,' specified file or on the contents of the SQL buffer. The buffer');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EDIT',7,' has no command history list and does not record SQL*Plus commands.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EDIT',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EDIT',9,' ED[IT] [file_name[.ext]]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EDIT',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXECUTE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXECUTE',2,' EXECUTE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXECUTE',3,' -------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXECUTE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXECUTE',5,' Executes a single PL/SQL statement or runs a stored procedure.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXECUTE',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXECUTE',7,' EXEC[UTE] statement');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXECUTE',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXIT',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXIT',2,' EXIT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXIT',3,' ----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXIT',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXIT',5,' Commits or rolls back all pending changes, logs out of Oracle,');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXIT',6,' terminates SQL*Plus and returns control to the operating system.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXIT',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXIT',8,' {EXIT|QUIT} [SUCCESS|FAILURE|WARNING|n|variable|:BindVariable]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXIT',9,'   [COMMIT|ROLLBACK]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('EXIT',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('GET',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('GET',2,' GET');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('GET',3,' ---');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('GET',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('GET',5,' Loads a SQL statement or PL/SQL block from a script into the SQL buffer.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('GET',6,' The buffer has no command history list and does not record SQL*Plus commands.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('GET',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('GET',8,' GET [FILE] file_name[.ext] [LIST | NOLIST]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('GET',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',2,' HELP');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',3,' ----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',5,' Accesses this command line help system. Enter HELP INDEX or ? INDEX');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',6,' for a list of topics.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',8,' You can view SQL*Plus resources at');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',9,'     http://www.oracle.com/technology/tech/sql_plus/');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',10,' and the Oracle Database Library at');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',11,'     http://www.oracle.com/technology/documentation/');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',12,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',13,' HELP|? [topic]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HELP',14,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HOST',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HOST',2,' HOST');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HOST',3,' ----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HOST',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HOST',5,' Executes an operating system command without leaving SQL*Plus.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HOST',6,' Enter HOST without command to display an operating system prompt.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HOST',7,' You can then enter multiple operating system commands.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HOST',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HOST',9,' HO[ST] [command]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('HOST',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',2,'Enter Help [topic] for help.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',3,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',4,' @             COPY         PAUSE                    SHUTDOWN');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',5,' @@            DEFINE       PRINT                    SPOOL');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',6,' /             DEL          PROMPT                   SQLPLUS');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',7,' ACCEPT        DESCRIBE     QUIT                     START');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',8,' APPEND        DISCONNECT   RECOVER                  STARTUP');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',9,' ARCHIVE LOG   EDIT         REMARK                   STORE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',10,' ATTRIBUTE     EXECUTE      REPFOOTER                TIMING');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',11,' BREAK         EXIT         REPHEADER                TTITLE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',12,' BTITLE        GET          RESERVED WORDS (SQL)     UNDEFINE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',13,' CHANGE        HELP         RESERVED WORDS (PL/SQL)  VARIABLE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',14,' CLEAR         HOST         RUN                      WHENEVER OSERROR');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',15,' COLUMN        INPUT        SAVE                     WHENEVER SQLERROR');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',16,' COMPUTE       LIST         SET                      XQUERY');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',17,' CONNECT       PASSWORD     SHOW');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INDEX',18,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INPUT',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INPUT',2,' INPUT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INPUT',3,' -----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INPUT',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INPUT',5,' Adds one or more new lines of text after the current line in the');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INPUT',6,' SQL buffer. The buffer has no command history list and does not');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INPUT',7,' record SQL*Plus commands.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INPUT',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INPUT',9,' I[NPUT] [text]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('INPUT',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('LIST',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('LIST',2,' LIST');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('LIST',3,' ----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('LIST',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('LIST',5,' Lists one or more lines of the most recently executed SQL command');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('LIST',6,' or PL/SQL block which is stored in the SQL buffer. Enter LIST with');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('LIST',7,' no clauses to list all lines. In SQL*Plus command-line you can also');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('LIST',8,' use ";" to list all the lines in the SQL buffer. The buffer has no');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('LIST',9,' command history list and does not record SQL*Plus commands.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('LIST',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('LIST',11,' L[IST] [n | n m | n  * | n LAST | * | * n | * LAST | LAST]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('LIST',12,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('MENU',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('MENU',2,' Menu');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('MENU',3,' ----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('MENU',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('MENU',5,' Enter HELP INDEX for a list of help topics.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('MENU',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PASSWORD',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PASSWORD',2,' PASSWORD');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PASSWORD',3,' --------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PASSWORD',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PASSWORD',5,' Allows you to change a password without displaying it on an input device.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PASSWORD',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PASSWORD',7,' PASSW[ORD] [username]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PASSWORD',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PAUSE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PAUSE',2,' PAUSE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PAUSE',3,' -----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PAUSE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PAUSE',5,' Displays the specified text then waits for the user to press RETURN.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PAUSE',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PAUSE',7,' PAU[SE] [text]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PAUSE',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PRINT',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PRINT',2,' PRINT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PRINT',3,' -----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PRINT',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PRINT',5,' Displays the current values of bind variables, or lists all bind');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PRINT',6,' variables.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PRINT',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PRINT',8,' PRI[NT] [variable ...]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PRINT',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PROMPT',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PROMPT',2,' PROMPT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PROMPT',3,' ------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PROMPT',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PROMPT',5,' Sends the specified message or a blank line to the user''s screen.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PROMPT',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PROMPT',7,' PRO[MPT] [text]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('PROMPT',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('QUIT',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('QUIT',2,' QUIT (Identical to EXIT)');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('QUIT',3,' ----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('QUIT',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('QUIT',5,' Commits or rolls back all pending changes, logs out of Oracle,');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('QUIT',6,' terminates SQL*Plus and returns control to the operating system.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('QUIT',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('QUIT',8,' {QUIT|EXIT} [SUCCESS|FAILURE|WARNING|n|variable|:BindVariable]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('QUIT',9,'   [COMMIT|ROLLBACK]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('QUIT',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',2,' RECOVER');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',3,' -------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',5,' Performs media recovery on one or more tablespaces, one or more');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',6,' datafiles, or the entire database.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',8,' RECOVER {general | managed} | BEGIN BACKUP | END BACKUP}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',10,' where the general clause has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',11,'   [AUTOMATIC] [FROM location]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',12,'   { {full_database_recovery | partial_database_recovery |LOGFILE filename}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',13,'   [ {TEST | ALLOW integer CORRUPTION | parallel_clause}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',14,'   [TEST | ALLOW integer CORRUPTION | parallel_clause] ...]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',15,'   |CONTINUE [DEFAULT]|CANCEL}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',16,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',17,'   where the full_database_recovery clause has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',18,'     [STANDBY] DATABASE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',19,'     [{ UNTIL {CANCEL | TIME date | CHANGE integer}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',20,'      | USING BACKUP CONTROLFILE}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',21,'      [ UNTIL {CANCEL | TIME date | CHANGE integer}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',22,'      | USING BACKUP CONTROLFILE] ...]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',23,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',24,'   where the partial_database_recovery clause has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',25,'     {TABLESPACE tablespace [, tablespace] ...');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',26,'      | DATAFILE filename | filenumber} [,filename | filenumber] ...');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',27,'      | STANDBY');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',28,'       {TABLESPACE tablespace [, tablespace] ...');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',29,'       | DATAFILE filename | filenumber} [,filename | filenumber] ...}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',30,'     UNTIL [CONSISTENT WITH] CONTROLFILE }');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',31,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',32,' where the parallel clause has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',33,'   {NOPARALLEL | PARALLEL [integer]}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',34,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',35,' where the managed clause has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',36,'   MANAGED STANDBY DATABASE recover_clause | cancel_clause | finish_clause');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',37,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',38,' where the recover_clause has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',39,'   {{DISCONNECT [FROM SESSION] | {TIMEOUT integer | NOTIMEOUT} }');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',40,'    |{NODELAY | DEFAULT DELAY | DELAY integer} | NEXT integer');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',41,'    |{EXPIRE integer | NO EXPIRE} | parallel_clause');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',42,'    | USING CURRENT LOGFILE | UNTIL CHANGE integer');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',43,'    | THROUGH {[THREAD integer] SEQUENCE integer');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',44,'              | ALL ARCHIVELOG  | {ALL | LAST | NEXT } SWITCHOVER} }');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',45,'      [DISCONNECT [FROM SESSION ]  | {TIMEOUT integer | NOTIMEOUT}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',46,'       | {NODELAY | DEFAULT DELAY | DELAY integer} | NEXT integer');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',47,'       | {EXPIRE integer | NO EXPIRE} | parallel_clause');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',48,'       | USING CURRENT LOGFILE | UNTIL CHANGE integer');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',49,'       | THROUGH {[THREAD integer] SEQUENCE integer');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',50,'                 | ALL ARCHIVELOG  | {ALL | LAST | NEXT } SWITCHOVER} ]...');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',51,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',52,' where the cancel_clause has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',53,'   CANCEL [IMMEDIATE] [WAIT | NOWAIT]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',54,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',55,' where the finish_clause has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',56,'   [DISCONNECT [FROM SESSION]] [parallel_clause]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',57,'   FINISH [SKIP [STANDBY LOGFILE]] [WAIT | NOWAIT]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',58,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',59,' where the parallel_clause has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',60,'   {NOPARALLEL | PARALLEL [integer] }');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RECOVER',61,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REMARK',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REMARK',2,' REMARK');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REMARK',3,' ------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REMARK',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REMARK',5,' Begins a comment in a script. SQL*Plus does not interpret the comment');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REMARK',6,' as a command.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REMARK',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REMARK',8,' REM[ARK]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REMARK',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',2,' REPFOOTER');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',3,' ---------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',5,' Places and formats a footer at the bottom of a report, or lists the');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',6,' REPFOOTER definition.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',8,' REPF[OOTER] [PAGE] [printspec [text|variable] ...] | [OFF|ON]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',10,' where printspec represents one or more of the following clauses:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',11,'     COL n          LE[FT]        BOLD');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',12,'     S[KIP] [n]     CE[NTER]      FORMAT text');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',13,'     TAB n          R[IGHT]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',14,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',2,' REPHEADER');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',3,' ---------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',5,' Places and formats a header at the top of a report, or lists the');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',6,' REPHEADER definition.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',8,' REPH[EADER] [PAGE] [printspec [text|variable] ...] | [OFF|ON]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',10,' where printspec represents one or more of the following clauses:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',11,'     COL n          LE[FT]        BOLD');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',12,'     S[KIP] [n]     CE[NTER]      FORMAT text');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',13,'     TAB n          R[IGHT]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('REPHEADER',14,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',2,' RESERVED WORDS (SQL)');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',3,' --------------------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',5,' SQL Reserved Words have special meaning in SQL, and may not be used for');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',6,' identifier names unless enclosed in "quotes".');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',8,' An asterisk (*) indicates words are also ANSI Reserved Words.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',10,' Oracle prefixes implicitly generated schema object and subobject names');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',11,' with "SYS_". To avoid name resolution conflict, Oracle discourages you');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',12,' from prefixing your schema object and subobject names with "SYS_".');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',13,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',14,' ACCESS          DEFAULT*         INTEGER*        ONLINE          START');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',15,' ADD*            DELETE*          INTERSECT*      OPTION*         SUCCESSFUL');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',16,' ALL*            DESC*            INTO*           OR*             SYNONYM');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',17,' ALTER*          DISTINCT*        IS*             ORDER*          SYSDATE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',18,' AND*            DROP*            LEVEL*          PCTFREE         TABLE*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',19,' ANY*            ELSE*            LIKE*           PRIOR*          THEN*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',20,' AS*             EXCLUSIVE        LOCK            PRIVILEGES*     TO*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',21,' ASC*            EXISTS           LONG            PUBLIC*         TRIGGER');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',22,' AUDIT           FILE             MAXEXTENTS      RAW             UID');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',23,' BETWEEN*        FLOAT*           MINUS           RENAME          UNION*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',24,' BY*             FOR*             MLSLABEL        RESOURCE        UNIQUE*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',25,' CHAR*           FROM*            MODE            REVOKE*         UPDATE*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',26,' CHECK*          GRANT*           MODIFY          ROW             USER*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',27,' CLUSTER         GROUP*           NOAUDIT         ROWID           VALIDATE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',28,' COLUMN          HAVING*          NOCOMPRESS      ROWNUM          VALUES*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',29,' COMMENT         IDENTIFIED       NOT*            ROWS*           VARCHAR*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',30,' COMPRESS        IMMEDIATE*       NOWAIT          SELECT*         VARCHAR2');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',31,' CONNECT*        IN*              NULL*           SESSION*        VIEW*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',32,' CREATE*         INCREMENT        NUMBER          SET*            WHENEVER*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',33,' CURRENT*        INDEX            OF*             SHARE           WHERE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',34,' DATE*           INITIAL          OFFLINE         SIZE*           WITH*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',35,' DECIMAL*        INSERT*          ON*             SMALLINT*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',36,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',2,' RESERVED WORDS (PL/SQL)');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',3,' -----------------------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',5,' PL/SQL Reserved Words have special meaning in PL/SQL, and may not be used');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',6,' for identifier names (unless enclosed in "quotes").');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',8,' An asterisk (*) indicates words are also SQL Reserved Words.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',10,' ALL*            DESC*           JAVA            PACKAGE         SUBTYPE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',11,' ALTER*          DISTINCT*       LEVEL*          PARTITION       SUCCESSFUL*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',12,' AND*            DO              LIKE*           PCTFREE*        SUM');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',13,' ANY*            DROP*           LIMITED         PLS_INTEGER     SYNONYM*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',14,' ARRAY           ELSE*           LOCK*           POSITIVE        SYSDATE*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',15,' AS*             ELSIF           LONG*           POSITIVEN       TABLE*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',16,' ASC*            END             LOOP            PRAGMA          THEN*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',17,' AT              EXCEPTION       MAX             PRIOR*          TIME');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',18,' AUTHID          EXCLUSIVE*      MIN             PRIVATE         TIMESTAMP');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',19,' AVG             EXECUTE         MINUS*          PROCEDURE       TIMEZONE_ABBR');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',20,' BEGIN           EXISTS*         MINUTE          PUBLIC*         TIMEZONE_HOUR');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',21,' BETWEEN*        EXIT            MLSLABEL*       RAISE           TIMEZONE_MINUTE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',22,' BINARY_INTEGER  EXTENDS         MOD             RANGE           TIMEZONE_REGION');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',23,' BODY            EXTRACT         MODE*           RAW*            TO*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',24,' BOOLEAN         FALSE           MONTH           REAL            TRIGGER*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',25,' BULK            FETCH           NATURAL         RECORD          TRUE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',26,' BY*             FLOAT*          NATURALN        REF             TYPE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',27,' CHAR*           FOR*            NEW             RELEASE         UI');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',28,' CHAR_BASE       FORALL          NEXTVAL         RETURN          UNION*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',29,' CHECK*          FROM*           NOCOPY          REVERSE         UNIQUE*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',30,' CLOSE           FUNCTION        NOT*            ROLLBACK        UPDATE*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',31,' CLUSTER*        GOTO            NOWAIT*         ROW*            USE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',32,' COALESCE        GROUP*          NULL*           ROWID*          USER*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',33,' COLLECT         HAVING*         NULLIF          ROWNUM*         VALIDATE*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',34,' COMMENT*        HEAP            NUMBER*         ROWTYPE         VALUES*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',35,' COMMIT          HOUR            NUMBER_BASE     SAVEPOINT       VARCHAR*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',36,' COMPRESS*       IF              OCIROWID        SECOND          VARCHAR2*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',37,' CONNECT*        IMMEDIATE*      OF*             SELECT*         VARIANCE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',38,' CONSTANT        IN*             ON*             SEPERATE        VIEW*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',39,' CREATE*         INDEX*          OPAQUE          SET*            WHEN');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',40,' CURRENT*        INDICATOR       OPEN            SHARE*          WHENEVER*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',41,' CURRVAL         INSERT*         OPERATOR        SMALLINT*       WHERE*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',42,' CURSOR          INTEGER*        OPTION*         SPACE           WHILE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',43,' DATE*           INTERFACE       OR*             SQL             WITH*');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',44,' DAY             INTERSECT*      ORDER*          SQLCODE         WORK');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',45,' DECIMAL*        INTERVAL        ORGANIZATION    SQLERRM         WRITE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',46,' DECLARE         INTO*           OTHERS          START*          YEAR');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',47,' DEFAULT*        IS*             OUT             STDDEV          ZONE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',48,' DELETE*         ISOLATION');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',49,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RUN',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RUN',2,' RUN');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RUN',3,' ---');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RUN',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RUN',5,' Lists and executes the most recently executed SQL command or');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RUN',6,' PL/SQL block which is stored in the SQL buffer. The buffer has');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RUN',7,' no command history list and does not record SQL*Plus commands.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RUN',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RUN',9,' R[UN]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('RUN',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SAVE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SAVE',2,' SAVE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SAVE',3,' ----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SAVE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SAVE',5,' Saves the contents of the SQL buffer in a script. The');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SAVE',6,' buffer has no command history list and does not record SQL*Plus commands.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SAVE',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SAVE',8,' SAV[E] [FILE] file_name[.ext] [CRE[ATE] | REP[LACE] | APP[END]]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SAVE',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',2,' SET');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',3,' ---');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',5,' Sets a system variable to alter the SQL*Plus environment settings');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',6,' for your current session. For example, to:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',7,'     -   set the display width for data');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',8,'     -   customize HTML formatting');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',9,'     -   enable or disable printing of column headings');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',10,'     -   set the number of lines per page');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',11,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',12,' SET system_variable value');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',13,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',14,' where system_variable and value represent one of the following clauses:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',15,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',16,'   APPI[NFO]{OFF|ON|text}                   NEWP[AGE] {1|n|NONE}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',17,'   ARRAY[SIZE] {15|n}                       NULL text');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',18,'   AUTO[COMMIT] {OFF|ON|IMM[EDIATE]|n}      NUMF[ORMAT] format');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',19,'   AUTOP[RINT] {OFF|ON}                     NUM[WIDTH] {10|n}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',20,'   AUTORECOVERY {OFF|ON}                    PAGES[IZE] {14|n}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',21,'   AUTOT[RACE] {OFF|ON|TRACE[ONLY]}         PAU[SE] {OFF|ON|text}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',22,'     [EXP[LAIN]] [STAT[ISTICS]]             RECSEP {WR[APPED]|EA[CH]|OFF}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',23,'   BLO[CKTERMINATOR] {.|c|ON|OFF}           RECSEPCHAR {_|c}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',24,'   CMDS[EP] {;|c|OFF|ON}                    SERVEROUT[PUT] {ON|OFF}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',25,'   COLSEP {_|text}                            [SIZE {n | UNLIMITED}]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',26,'   CON[CAT] {.|c|ON|OFF}                      [FOR[MAT]  {WRA[PPED] |');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',27,'   COPYC[OMMIT] {0|n}                          WOR[D_WRAPPED] |');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',28,'   COPYTYPECHECK {ON|OFF}                      TRU[NCATED]}]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',29,'   DEF[INE] {&|c|ON|OFF}                    SHIFT[INOUT] {VIS[IBLE] |');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',30,'   DESCRIBE [DEPTH {1|n|ALL}]                 INV[ISIBLE]}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',31,'     [LINENUM {OFF|ON}] [INDENT {OFF|ON}]   SHOW[MODE] {OFF|ON}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',32,'   ECHO {OFF|ON}                            SQLBL[ANKLINES] {OFF|ON}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',33,'   EDITF[ILE] file_name[.ext]               SQLC[ASE] {MIX[ED] |');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',34,'   EMB[EDDED] {OFF|ON}                        LO[WER] | UP[PER]}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',35,'   ERRORL[OGGING] {ON|OFF}                  SQLCO[NTINUE] {> | text}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',36,'     [TABLE [schema.]tablename]             SQLN[UMBER] {ON|OFF}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',37,'     [TRUNCATE] [IDENTIFIER identifier]     SQLPLUSCOMPAT[IBILITY] {x.y[.z]}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',38,'   ESC[APE] {\|c|OFF|ON}                    SQLPRE[FIX] {#|c}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',39,'   ESCCHAR {@|?|%|$|OFF}                    SQLP[ROMPT] {SQL>|text}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',40,'   EXITC[OMMIT] {ON|OFF}                    SQLT[ERMINATOR] {;|c|ON|OFF}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',41,'   FEED[BACK] {6|n|ON|OFF}                  SUF[FIX] {SQL|text}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',42,'   FLAGGER {OFF|ENTRY|INTERMED[IATE]|FULL}  TAB {ON|OFF}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',43,'   FLU[SH] {ON|OFF}                         TERM[OUT] {ON|OFF}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',44,'   HEA[DING] {ON|OFF}                       TI[ME] {OFF|ON}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',45,'   HEADS[EP] {||c|ON|OFF}                   TIMI[NG] {OFF|ON}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',46,'   INSTANCE [instance_path|LOCAL]           TRIM[OUT] {ON|OFF}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',47,'   LIN[ESIZE] {80|n}                        TRIMS[POOL] {OFF|ON}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',48,'   LOBOF[FSET] {1|n}                        UND[ERLINE] {-|c|ON|OFF}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',49,'   LOGSOURCE [pathname]                     VER[IFY] {ON|OFF}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',50,'   LONG {80|n}                              WRA[P] {ON|OFF}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',51,'   LONGC[HUNKSIZE] {80|n}                   XQUERY {BASEURI text|');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',52,'   MARK[UP] HTML [OFF|ON]                     ORDERING{UNORDERED|');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',53,'     [HEAD text] [BODY text] [TABLE text]              ORDERED|DEFAULT}|');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',54,'     [ENTMAP {ON|OFF}]                        NODE{BYVALUE|BYREFERENCE|');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',55,'     [SPOOL {OFF|ON}]                              DEFAULT}|');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',56,'     [PRE[FORMAT] {OFF|ON}]                   CONTEXT text}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SET',57,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',2,' SHOW');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',3,' ----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',5,' Shows the value of a SQL*Plus system variable, or the current');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',6,' SQL*Plus environment. SHOW SGA requires a DBA privileged login.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',8,' SHO[W] option');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',10,' where option represents one of the following terms or clauses:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',11,'     system_variable');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',12,'     ALL');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',13,'     BTI[TLE]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',14,'     ERR[ORS] [{FUNCTION | PROCEDURE | PACKAGE | PACKAGE BODY | TRIGGER');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',15,'        | VIEW | TYPE | TYPE BODY | DIMENSION | JAVA CLASS} [schema.]name]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',16,'     LNO');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',17,'     PARAMETERS [parameter_name]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',18,'     PNO');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',19,'     RECYC[LEBIN] [original_name]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',20,'     REL[EASE]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',21,'     REPF[OOTER]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',22,'     REPH[EADER]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',23,'     SGA');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',24,'     SPOO[L]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',25,'     SPPARAMETERS [parameter_name]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',26,'     SQLCODE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',27,'     TT[ITLE]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',28,'     USER');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHOW',29,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',2,' SHUTDOWN');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',3,' --------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',5,' Shuts down a currently running Oracle Database instance, optionally');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',6,' closing and dismounting a database.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',8,' SHUTDOWN [ABORT|IMMEDIATE|NORMAL|TRANSACTIONAL [LOCAL]]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SPOOL',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SPOOL',2,' SPOOL');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SPOOL',3,' -----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SPOOL',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SPOOL',5,' Stores query results in a file, or optionally sends the file to a printer.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SPOOL',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SPOOL',7,' SPO[OL] [file_name[.ext] [CRE[ATE] | REP[LACE] | APP[END]] | OFF | OUT]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SPOOL',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',2,' SQLPLUS');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',3,' -------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',5,' Starts SQL*Plus from the operating system prompt.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',7,' SQLPLUS [ [option] [logon|/NOLOG] [start] ]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',9,' where option has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',10,'     -H[ELP]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',11,'     | -V[ERSION]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',12,'     | [[-C[OMPATIBILITY] x.y[.z]] [-L[OGON]]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',13,'        [-M[ARKUP] markup_option] [-R[ESTRICT] {1|2|3}] [-S[ILENT]]]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',14,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',15,' and where markup_option has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',16,'     HTML [ON|OFF] [HEAD text] [BODY text] [TABLE text]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',17,'          [ENTMAP {ON|OFF}] [SPOOL {ON|OFF}] [PRE[FORMAT] {ON|OFF}]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',18,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',19,' and where logon has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',20,'     {username[/password][@connect_identifier] | /}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',21,'     [AS {SYSOPER|SYSDBA|SYSASM}] [edition=value]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',22,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',23,' and where start has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',24,'     @{url|filename[.ext]} [arg ...]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',25,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',2,' START');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',3,' -----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',5,' Runs the SQL*Plus statements in the specified script. The script can be');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',6,' called from the local file system or a web server.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',8,' STA[RT] {url|file_name[.ext]} [arg ...]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',10,' where url supports HTTP and FTP protocols in the form:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',11,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',12,'    http://host.domain/script.sql');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('START',13,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',2,' STARTUP');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',3,' -------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',5,' Starts an Oracle instance with several options, including mounting,');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',6,' and opening a database.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',8,' STARTUP options | upgrade_options');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',10,' where options has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',11,'    [FORCE] [RESTRICT] [PFILE=filename] [QUIET] [ MOUNT [dbname] |');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',12,'    [ OPEN [open_options] [dbname] ] |');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',13,'    NOMOUNT ]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',14,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',15,' where open_options has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',16,'    READ {ONLY | WRITE [RECOVER]} | RECOVER');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',17,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',18,' and where upgrade_options has the following syntax:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',19,'    [PFILE=filename] {UPGRADE | DOWNGRADE} [QUIET]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STARTUP',20,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STORE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STORE',2,' STORE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STORE',3,' -----');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STORE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STORE',5,' Saves attributes of the current SQL*Plus environment in a script.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STORE',6,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STORE',7,' STORE {SET} file_name[.ext] [CRE[ATE] | REP[LACE] | APP[END]]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('STORE',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TIMING',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TIMING',2,' TIMING');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TIMING',3,' ------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TIMING',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TIMING',5,' Records timing data for an elapsed time period, lists the current');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TIMING',6,' timer''s name and timing data, or lists the number of active timers.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TIMING',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TIMING',8,' TIMI[NG] [START text|SHOW|STOP]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TIMING',9,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',2,' TTITLE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',3,' ------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',5,' Places and formats a title at the top of each report page.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',6,' Enter TTITLE with no clause to list its current definition.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',8,' The old form of TTITLE is used if only a single word or');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',9,' a string in quotes follows the TTITLE command.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',11,' TTI[TLE] [printspec [text|variable] ...] | [OFF|ON]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',12,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',13,' where printspec represents one or more of the following clauses:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',14,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',15,'     COL n          LE[FT]        BOLD');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',16,'     S[KIP] [n]     CE[NTER]      FORMAT text');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',17,'     TAB n          R[IGHT]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TTITLE',18,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',2,' UNDEFINE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',3,' --------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',5,' Deletes one or more substitution variables that you defined either');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',6,' explicitly (with the DEFINE command), or implicitly (with a START');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',7,' command argument).');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',9,' UNDEF[INE] variable ...');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',2,' VARIABLE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',3,' --------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',5,' Declares a bind variable that can be referenced in PL/SQL, or');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',6,' lists the current display characteristics for a single variable');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',7,' or all variables.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',9,'VAR[IABLE] [variable [type]]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',11,' where type represents one of the following:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',12,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',13,'     NUMBER         CHAR          CHAR (n [CHAR|BYTE])');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',14,'     NCHAR          NCHAR (n)     VARCHAR2 (n [CHAR|BYTE])');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',15,'     NVARCHAR2 (n)  CLOB          NCLOB');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',16,'     REFCURSOR      BINARY_FLOAT  BINARY_DOUBLE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('VARIABLE',17,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',2,' WHENEVER OSERROR');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',3,' ----------------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',5,' Performs the specified action (exits SQL*Plus by default) if an');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',6,' operating system error occurs (such as a file writing error).');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',8,' WHENEVER OSERROR {EXIT [SUCCESS|FAILURE|n|variable|:BindVariable]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',9,'                   [COMMIT|ROLLBACK] | CONTINUE [COMMIT|ROLLBACK|NONE]}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',2,' WHENEVER SQLERROR');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',3,' -----------------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',5,' Performs the specified action (exits SQL*Plus by default) if a');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',6,' SQL command or PL/SQL block generates an error.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',7,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',8,' WHENEVER SQLERROR {EXIT [SUCCESS|FAILURE|WARNING|n|variable|:BindVariable]');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',9,'                    [COMMIT|ROLLBACK] | CONTINUE [COMMIT|ROLLBACK|NONE]}');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('XQUERY',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('XQUERY',2,' XQUERY');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('XQUERY',3,' ------');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('XQUERY',4,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('XQUERY',5,' Performs an XQuery 1.0 query on a specified database. Attempting to use');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('XQUERY',6,' XQUERY on a database earlier than Oracle Database 10g (Release 2) generates');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('XQUERY',7,' an error.');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('XQUERY',8,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('XQUERY',9,' XQUERY xquery_statement');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('XQUERY',10,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',1,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',2,' Help is available on the following topics:');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',3,null);
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',11,'/');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',12,'@');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',13,'@@');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',14,'ACCEPT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',15,'APPEND');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',16,'ARCHIVE LOG');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',17,'ATTRIBUTE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',18,'BREAK');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',19,'BTITLE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',20,'CHANGE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',21,'CLEAR');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',22,'COLUMN');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',23,'COMPUTE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',24,'CONNECT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',25,'COPY');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',26,'DEFINE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',27,'DEL');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',28,'DESCRIBE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',29,'DISCONNECT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',30,'EDIT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',31,'EXECUTE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',32,'EXIT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',33,'GET');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',34,'HELP');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',35,'HOST');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',36,'INDEX');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',37,'INPUT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',38,'LIST');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',39,'MENU');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',40,'PASSWORD');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',41,'PAUSE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',42,'PRINT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',43,'PROMPT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',44,'QUIT');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',45,'RECOVER');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',46,'REMARK');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',47,'REPFOOTER');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',48,'REPHEADER');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',49,'RESERVED WORDS (PL/SQL)');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',50,'RESERVED WORDS (SQL)');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',51,'RUN');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',52,'SAVE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',53,'SET');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',54,'SHOW');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',55,'SHUTDOWN');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',56,'SPOOL');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',57,'SQLPLUS');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',58,'START');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',59,'STARTUP');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',60,'STORE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',61,'TIMING');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',62,'TOPICS');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',63,'TTITLE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',64,'UNDEFINE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',65,'VARIABLE');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',66,'WHENEVER OSERROR');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',67,'WHENEVER SQLERROR');
Insert into SYSTEM.HELP (TOPIC,SEQ,INFO) values ('TOPICS',68,'XQUERY');
REM INSERTING into SYSTEM.GRN_DETAILS
SET DEFINE OFF;
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (81,50,4800,15,72000,10,71990,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (101,50,4800,1,4800,0,4800,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (103,50,4800,10,48000,0,48000,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (103,41,4800,100,480000,0,480000,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (104,50,4800,90,432000,0,432000,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (121,41,4800,100,480000,0,480000,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (122,68,1540,10,15400,0,15400,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (122,67,7500,2,15000,0,15000,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (122,66,4850,5,24250,0,24250,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (122,65,2500,10,25000,0,25000,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (122,64,2850,10,28500,0,28500,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (122,63,5400,10,54000,0,54000,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (122,62,2500,10,25000,0,25000,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (122,41,4800,5,24000,0,24000,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (122,50,4800,50,240000,1,239999,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (123,61,1950,10,19500,0,19500,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (124,41,4800,9,43200,0,43200,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (141,64,2850,20,57000,0,57000,1);
Insert into SYSTEM.GRN_DETAILS (GRNNO,ITEMCODE,PRICE,QTY,TOTAL,DISCOUNT,NET_AMOUNT,SAS_NO) values (141,66,4850,10,48500,0,48500,1);
REM INSERTING into SYSTEM.GRN
SET DEFINE OFF;
Insert into SYSTEM.GRN (GRNNO,SUP_CODE,DDATE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,SAS_NO) values (103,'002',to_date('09-JUN-15','DD-MON-RR'),528000,0,528000,1);
Insert into SYSTEM.GRN (GRNNO,SUP_CODE,DDATE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,SAS_NO) values (104,'002',to_date('09-JUN-15','DD-MON-RR'),432000,0,432000,1);
Insert into SYSTEM.GRN (GRNNO,SUP_CODE,DDATE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,SAS_NO) values (121,'001',to_date('15-JUN-15','DD-MON-RR'),480000,0,480000,1);
Insert into SYSTEM.GRN (GRNNO,SUP_CODE,DDATE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,SAS_NO) values (81,'001',to_date('27-MAY-15','DD-MON-RR'),71990,0,71990,1);
Insert into SYSTEM.GRN (GRNNO,SUP_CODE,DDATE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,SAS_NO) values (101,'001',to_date('09-JUN-15','DD-MON-RR'),4800,0,4800,1);
Insert into SYSTEM.GRN (GRNNO,SUP_CODE,DDATE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,SAS_NO) values (122,'005',to_date('15-JUN-15','DD-MON-RR'),451149,0,451149,1);
Insert into SYSTEM.GRN (GRNNO,SUP_CODE,DDATE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,SAS_NO) values (123,'005',to_date('15-JUN-15','DD-MON-RR'),19500,0,19500,1);
Insert into SYSTEM.GRN (GRNNO,SUP_CODE,DDATE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,SAS_NO) values (124,'001',to_date('15-JUN-15','DD-MON-RR'),43200,0,43200,1);
Insert into SYSTEM.GRN (GRNNO,SUP_CODE,DDATE,TOTAL_AMOUNT,DISCOUNT,NET_AMOUNT,SAS_NO) values (141,'002',to_date('17-AUG-15','DD-MON-RR'),105500,0,105500,1);
REM INSERTING into SYSTEM.ERPUSER
SET DEFINE OFF;
Insert into SYSTEM.ERPUSER (EMAIL,PASSWORD,SAS_NO,DEPARTMENT,USERNAME,FULLNAME,ADDRESS,TYPE,PHOTO,CONTACTNO,EMP_CODE) values ('ravi@gmail.com','123',1,4,'ravi','Ravindra Warnasooriya','Meddegama , Halmillawewa',103,null,788757284,4);
Insert into SYSTEM.ERPUSER (EMAIL,PASSWORD,SAS_NO,DEPARTMENT,USERNAME,FULLNAME,ADDRESS,TYPE,PHOTO,CONTACTNO,EMP_CODE) values ('asanka@gmail.com','asanka',1,5,'asanka','Asanka','colombo  ',101,'asanka@gmail.com.jpg',7545454,41);
Insert into SYSTEM.ERPUSER (EMAIL,PASSWORD,SAS_NO,DEPARTMENT,USERNAME,FULLNAME,ADDRESS,TYPE,PHOTO,CONTACTNO,EMP_CODE) values ('amila@gmail.com','amila@123',1,1,'amila','Amila','Colombo ',103,'amila@gmail.com.jpg',1218489,null);
Insert into SYSTEM.ERPUSER (EMAIL,PASSWORD,SAS_NO,DEPARTMENT,USERNAME,FULLNAME,ADDRESS,TYPE,PHOTO,CONTACTNO,EMP_CODE) values ('kamal@gmail.com','kamal@123',1,3,'kamal','kamal','colombo ',121,'kamal@gmail.com.jpg',775854585,null);
REM INSERTING into SYSTEM.ERP_PAYABALE_RECEIVABLE
SET DEFINE OFF;
Insert into SYSTEM.ERP_PAYABALE_RECEIVABLE (ID,INVOICE_NO,INV_DATE,CUS_CODE,AMOUNT,REMARKS,STATE,SAS_NO) values (2,'112',to_date('28-MAY-15','DD-MON-RR'),'111',2500,'rrr',0,1);
Insert into SYSTEM.ERP_PAYABALE_RECEIVABLE (ID,INVOICE_NO,INV_DATE,CUS_CODE,AMOUNT,REMARKS,STATE,SAS_NO) values (42,'001',to_date('05-DEC-16','DD-MON-RR'),'001',25000,'purchase goods',0,1);
Insert into SYSTEM.ERP_PAYABALE_RECEIVABLE (ID,INVOICE_NO,INV_DATE,CUS_CODE,AMOUNT,REMARKS,STATE,SAS_NO) values (43,'001',to_date('05-DEC-16','DD-MON-RR'),'001',25000,'purchsase goods',0,1);
Insert into SYSTEM.ERP_PAYABALE_RECEIVABLE (ID,INVOICE_NO,INV_DATE,CUS_CODE,AMOUNT,REMARKS,STATE,SAS_NO) values (44,'001',to_date('05-DEC-16','DD-MON-RR'),'001',25000,'purchsase goods',0,1);
Insert into SYSTEM.ERP_PAYABALE_RECEIVABLE (ID,INVOICE_NO,INV_DATE,CUS_CODE,AMOUNT,REMARKS,STATE,SAS_NO) values (45,'001',to_date('05-DEC-16','DD-MON-RR'),'001',25000,'purchase goods',0,1);
Insert into SYSTEM.ERP_PAYABALE_RECEIVABLE (ID,INVOICE_NO,INV_DATE,CUS_CODE,AMOUNT,REMARKS,STATE,SAS_NO) values (21,'254',to_date('28-MAY-15','DD-MON-RR'),'124',3500,'test receive',2,1);
Insert into SYSTEM.ERP_PAYABALE_RECEIVABLE (ID,INVOICE_NO,INV_DATE,CUS_CODE,AMOUNT,REMARKS,STATE,SAS_NO) values (41,'001',to_date('05-DEC-16','DD-MON-RR'),null,25000,'purchase goods',0,1);
Insert into SYSTEM.ERP_PAYABALE_RECEIVABLE (ID,INVOICE_NO,INV_DATE,CUS_CODE,AMOUNT,REMARKS,STATE,SAS_NO) values (46,'002',to_date('05-DEC-16','DD-MON-RR'),'13',4500,'vehical rent',0,1);
Insert into SYSTEM.ERP_PAYABALE_RECEIVABLE (ID,INVOICE_NO,INV_DATE,CUS_CODE,AMOUNT,REMARKS,STATE,SAS_NO) values (61,'002',to_date('05-DEC-16','DD-MON-RR'),'001',3500,'vehicle rent',0,1);
Insert into SYSTEM.ERP_PAYABALE_RECEIVABLE (ID,INVOICE_NO,INV_DATE,CUS_CODE,AMOUNT,REMARKS,STATE,SAS_NO) values (62,'003',to_date('05-DEC-16','DD-MON-RR'),'001',3500,'credit sale',2,1);
Insert into SYSTEM.ERP_PAYABALE_RECEIVABLE (ID,INVOICE_NO,INV_DATE,CUS_CODE,AMOUNT,REMARKS,STATE,SAS_NO) values (63,'003',null,'001',3500,'travalling charges',0,1);
REM INSERTING into SYSTEM.ERP_LEDGER
SET DEFINE OFF;
Insert into SYSTEM.ERP_LEDGER (ID,ACCOUNT_TYPE,SAS_NO,ACCOUNT_NUMBER,CREDIT,DEBIT,LEDG_DATE,ASSET) values (261,145,1,84,0,36000,to_date('15-JUN-15','DD-MON-RR'),null);
Insert into SYSTEM.ERP_LEDGER (ID,ACCOUNT_TYPE,SAS_NO,ACCOUNT_NUMBER,CREDIT,DEBIT,LEDG_DATE,ASSET) values (281,145,1,84,0,35000,to_date('15-JUN-15','DD-MON-RR'),null);
Insert into SYSTEM.ERP_LEDGER (ID,ACCOUNT_TYPE,SAS_NO,ACCOUNT_NUMBER,CREDIT,DEBIT,LEDG_DATE,ASSET) values (102,41,1,84,0,1000,to_date('13-MAY-15','DD-MON-RR'),null);
Insert into SYSTEM.ERP_LEDGER (ID,ACCOUNT_TYPE,SAS_NO,ACCOUNT_NUMBER,CREDIT,DEBIT,LEDG_DATE,ASSET) values (121,84,1,84,3500,0,to_date('27-MAY-15','DD-MON-RR'),null);
Insert into SYSTEM.ERP_LEDGER (ID,ACCOUNT_TYPE,SAS_NO,ACCOUNT_NUMBER,CREDIT,DEBIT,LEDG_DATE,ASSET) values (122,62,1,84,45000,0,to_date('27-MAY-15','DD-MON-RR'),null);
Insert into SYSTEM.ERP_LEDGER (ID,ACCOUNT_TYPE,SAS_NO,ACCOUNT_NUMBER,CREDIT,DEBIT,LEDG_DATE,ASSET) values (142,84,1,84,3500,0,to_date('16-JUN-15','DD-MON-RR'),null);
Insert into SYSTEM.ERP_LEDGER (ID,ACCOUNT_TYPE,SAS_NO,ACCOUNT_NUMBER,CREDIT,DEBIT,LEDG_DATE,ASSET) values (241,84,1,84,0,28000,to_date('16-JUN-15','DD-MON-RR'),null);
Insert into SYSTEM.ERP_LEDGER (ID,ACCOUNT_TYPE,SAS_NO,ACCOUNT_NUMBER,CREDIT,DEBIT,LEDG_DATE,ASSET) values (144,62,1,84,36000,0,to_date('03-JUN-15','DD-MON-RR'),null);
Insert into SYSTEM.ERP_LEDGER (ID,ACCOUNT_TYPE,SAS_NO,ACCOUNT_NUMBER,CREDIT,DEBIT,LEDG_DATE,ASSET) values (185,84,1,84,5000,0,to_date('16-JUN-15','DD-MON-RR'),null);
Insert into SYSTEM.ERP_LEDGER (ID,ACCOUNT_TYPE,SAS_NO,ACCOUNT_NUMBER,CREDIT,DEBIT,LEDG_DATE,ASSET) values (221,45,1,84,4500,0,to_date('08-JUN-15','DD-MON-RR'),null);
Insert into SYSTEM.ERP_LEDGER (ID,ACCOUNT_TYPE,SAS_NO,ACCOUNT_NUMBER,CREDIT,DEBIT,LEDG_DATE,ASSET) values (23,145,1,84,0,450000,to_date('16-JUN-15','DD-MON-RR'),null);
Insert into SYSTEM.ERP_LEDGER (ID,ACCOUNT_TYPE,SAS_NO,ACCOUNT_NUMBER,CREDIT,DEBIT,LEDG_DATE,ASSET) values (24,62,1,84,25000,0,to_date('16-JUN-15','DD-MON-RR'),null);
REM INSERTING into SYSTEM.ERP_INVOICE_DETAILS
SET DEFINE OFF;
Insert into SYSTEM.ERP_INVOICE_DETAILS (INVOICE_NO,LEDGER_ID,CUS_CODE,PAY_MODE,NARRATION) values ('2541',23,'001',1,'N');
Insert into SYSTEM.ERP_INVOICE_DETAILS (INVOICE_NO,LEDGER_ID,CUS_CODE,PAY_MODE,NARRATION) values ('574',24,'122212',1,'N');
REM INSERTING into SYSTEM.ERP_CHEQUES
SET DEFINE OFF;
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (1,'214552145','kcc',1,to_date('08-MAY-15','DD-MON-RR'),'BOC',null,14500,0,null);
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (4,'2154111','kol',1,to_date('09-MAY-15','DD-MON-RR'),'HNB',null,7500,0,null);
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (21,'1254874521',null,1,to_date('13-JAN-15','DD-MON-RR'),'BOC',null,2500,null,null);
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (81,'121548879',null,1,to_date('28-MAY-15','DD-MON-RR'),'NSB','0124',25000,1,'C0013');
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (41,'215478512',null,1,to_date('26-MAY-15','DD-MON-RR'),'BOC','0124',25000,1,'C0013');
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (61,'2315422541',null,1,to_date('27-JAN-15','DD-MON-RR'),'HNB','0124',45000,1,'C0013');
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (82,'4564565464',null,1,to_date('28-MAY-15','DD-MON-RR'),'BOC','0124',1000,1,'C0013');
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (101,'2145214',null,1,to_date('29-MAY-15','DD-MON-RR'),'BOC','0124',45000,0,'C0013');
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (121,'2541255',null,1,to_date('05-JUN-15','DD-MON-RR'),'NSB','0124',36000,1,'C0013');
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (141,'25412325',null,1,to_date('06-JUN-15','DD-MON-RR'),'sampath','0124',5420,1,'C0013');
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (161,'2547812',null,1,to_date('10-JUN-15','DD-MON-RR'),'Sampath','0124',4500,1,'C0013');
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (2,'125478541',null,1,to_date('05-DEC-24','DD-MON-RR'),'BOC','0124',450000,0,'001');
Insert into SYSTEM.ERP_CHEQUES (ID,CHEQUENO,BBRANCH,SAS_NO,BDATE,BANK,ACCNO,AMOUNT,STATE,CUS_CODE) values (3,'25471122254',null,1,to_date('16-JUN-15','DD-MON-RR'),'NSB','0124',25000,0,'122212');
REM INSERTING into SYSTEM.ERP_BANK_ACCOUNT
SET DEFINE OFF;
Insert into SYSTEM.ERP_BANK_ACCOUNT (ID,ACCUNT_NAME,BANK,ACCOUNT_NUMBER,BRANCH_NAME,SAS_NO) values (9,'ss','sam','121333','fh',1);
Insert into SYSTEM.ERP_BANK_ACCOUNT (ID,ACCUNT_NAME,BANK,ACCOUNT_NUMBER,BRANCH_NAME,SAS_NO) values (13,'SLFH_ky_1','Sampath','1234567','kandy_B',1);
Insert into SYSTEM.ERP_BANK_ACCOUNT (ID,ACCUNT_NAME,BANK,ACCOUNT_NUMBER,BRANCH_NAME,SAS_NO) values (14,'SLFH','BOC','567890','Bank hose',1);
Insert into SYSTEM.ERP_BANK_ACCOUNT (ID,ACCUNT_NAME,BANK,ACCOUNT_NUMBER,BRANCH_NAME,SAS_NO) values (21,'SLFH','Cargiils','89797909078689','colombo02',1);
REM INSERTING into SYSTEM.ERP_ACCOUNTYEAR
SET DEFINE OFF;
Insert into SYSTEM.ERP_ACCOUNTYEAR (ID,STARTDATE,ENDDATE,SAS_NO) values (2,to_date('17-JUN-15','DD-MON-RR'),to_date('18-JUN-17','DD-MON-RR'),1);
REM INSERTING into SYSTEM.ERP_ACCOUNT_TYPE
SET DEFINE OFF;
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (41,0,'Other',null);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (42,1,'paintNew',null);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (43,2,'Machinary',null);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (44,2,'accountdesc',null);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (45,2,'Land',null);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (61,2,'Vehical',null);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (1,0,'ASDSA',1);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (62,1,'Building Rent',1);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (84,1,'Vehicle rent',1);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (101,0,'aaaa',1);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (102,0,'qqq',1);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (121,0,'insurence bonus',1);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (145,0,'Sold goods',1);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (151,0,'oction',1);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (21,0,'Sales',1);
Insert into SYSTEM.ERP_ACCOUNT_TYPE (ID,ACCOUNT_TYPE,DESCRIPTION,SAS_NO) values (22,1,'Utilities',1);
REM INSERTING into SYSTEM.ERP_ACCOUNT_PAY_RECEIVE
SET DEFINE OFF;
REM INSERTING into SYSTEM.EMPLOYEE_POST
SET DEFINE OFF;
REM INSERTING into SYSTEM.EMPLOYEE_LOANTYPE
SET DEFINE OFF;
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('basic',null,5,'ok',1);
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('asasa',null,2,'asa',5);
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('asasa',null,2,'asa',6);
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('Vehi',null,2,'ddsds',45);
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('bbb',null,2,'2',788);
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('basic',null,2,'12',12);
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('Asanka',null,5,'25',8);
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('vehicle',null,45,'asasa',122);
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('vehicle',null,45,'asasa',1223);
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('vehicle',null,45,'asasa',11);
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('Asanka',null,1222,'qqwq',2);
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('Abc111',null,1222,'qqwq',3);
Insert into SYSTEM.EMPLOYEE_LOANTYPE (LOAN_TYPE,GET_DATE,DURATION,DESCRIPTION,LOAN_CODE) values ('basic',null,5,'asa',21);
REM INSERTING into SYSTEM.EMPLOYEE_LOAN_BALANCE
SET DEFINE OFF;
REM INSERTING into SYSTEM.EMPLOYEE_LOAN
SET DEFINE OFF;
Insert into SYSTEM.EMPLOYEE_LOAN (LOAN_ID,EMPLOYEE_ID,LOAN_TYPE,DURATION,START_DATE,END_DATE,MONTHLY,AMMOUNT) values (321,122,'basic',2,to_date('30-JAN-15','DD-MON-RR'),null,1222,100000);
Insert into SYSTEM.EMPLOYEE_LOAN (LOAN_ID,EMPLOYEE_ID,LOAN_TYPE,DURATION,START_DATE,END_DATE,MONTHLY,AMMOUNT) values (322,101,'d',2,to_date('22-JAN-15','DD-MON-RR'),null,1222,1222);
Insert into SYSTEM.EMPLOYEE_LOAN (LOAN_ID,EMPLOYEE_ID,LOAN_TYPE,DURATION,START_DATE,END_DATE,MONTHLY,AMMOUNT) values (323,124,'d',2,to_date('22-JAN-15','DD-MON-RR'),null,44,1222);
Insert into SYSTEM.EMPLOYEE_LOAN (LOAN_ID,EMPLOYEE_ID,LOAN_TYPE,DURATION,START_DATE,END_DATE,MONTHLY,AMMOUNT) values (461,102,'basic',44,to_date('01-APR-15','DD-MON-RR'),null,2273,100000);
Insert into SYSTEM.EMPLOYEE_LOAN (LOAN_ID,EMPLOYEE_ID,LOAN_TYPE,DURATION,START_DATE,END_DATE,MONTHLY,AMMOUNT) values (501,103,'basic',2,to_date('02-APR-15','DD-MON-RR'),null,5000,10000);
Insert into SYSTEM.EMPLOYEE_LOAN (LOAN_ID,EMPLOYEE_ID,LOAN_TYPE,DURATION,START_DATE,END_DATE,MONTHLY,AMMOUNT) values (1,4,'vehicle',24,to_date('01-APR-15','DD-MON-RR'),null,4167,100000);
Insert into SYSTEM.EMPLOYEE_LOAN (LOAN_ID,EMPLOYEE_ID,LOAN_TYPE,DURATION,START_DATE,END_DATE,MONTHLY,AMMOUNT) values (2,61,'basic',24,to_date('16-JUN-15','DD-MON-RR'),null,4167,100000);
REM INSERTING into SYSTEM.EMPLOYEE_ADVANCEPAYMENT
SET DEFINE OFF;
Insert into SYSTEM.EMPLOYEE_ADVANCEPAYMENT (EMPLOYEE_ID,QUANTITY,DESCRIPTION,GET_DATE,PAYMENT_CODE) values (61,15000,'pk',to_date('16-JAN-15','DD-MON-RR'),6);
REM INSERTING into SYSTEM.EMERGENCY_CONTACT
SET DEFINE OFF;
Insert into SYSTEM.EMERGENCY_CONTACT (NAME,RELATIONSHIP,HOME_TELEPHONE,MOBILE,WORK_TELEPHONE,EC_ID,EMP_ID,SAS_NO) values ('fkdhfjsd','Husband',2423423,32423,2342342,2,4,null);
REM INSERTING into SYSTEM.EDUCATION
SET DEFINE OFF;
Insert into SYSTEM.EDUCATION (LEVELS,INSTITUTE,MAJOR,GPA,START_DATE,END_DATE,EDUCATION_ID,EMP_ID,YEAR,SAS_NO) values ('Diploma','NAITA','IT',4,to_date('08-JUL-30','DD-MON-RR'),to_date('08-JUL-31','DD-MON-RR'),1,4,2015,null);
REM INSERTING into SYSTEM.DEPENDENT
SET DEFINE OFF;
Insert into SYSTEM.DEPENDENT (NAME,RELATIONSHIP,PLEASE_SPECIFY,DATE_OF_BIRTH,DEPENDENT_ID,EMP_ID,SAS_NO) values ('fds','Husband','sadfas',to_date('08-JUL-30','DD-MON-RR'),1,4,null);
REM INSERTING into SYSTEM.DEPARTMENT
SET DEFINE OFF;
Insert into SYSTEM.DEPARTMENT (DEPTNO,DEPARTMENT,SAS_NO) values (1,'SALES',1);
Insert into SYSTEM.DEPARTMENT (DEPTNO,DEPARTMENT,SAS_NO) values (2,'ACCOUNT',1);
Insert into SYSTEM.DEPARTMENT (DEPTNO,DEPARTMENT,SAS_NO) values (3,'HR',1);
Insert into SYSTEM.DEPARTMENT (DEPTNO,DEPARTMENT,SAS_NO) values (4,'PAYROLL',1);
Insert into SYSTEM.DEPARTMENT (DEPTNO,DEPARTMENT,SAS_NO) values (5,'ADMIN',1);
REM INSERTING into SYSTEM.CUSTOMER
SET DEFINE OFF;
Insert into SYSTEM.CUSTOMER (CUS_CODE,CUS_NAME,ADDRESS,EMAIL,CONTACT_NO,CREDIT_LEVEL,SAS_NO) values ('13','Anil Buddhika','Colombo 5 ','anil@gmail.com','0785854525',2500,1);
Insert into SYSTEM.CUSTOMER (CUS_CODE,CUS_NAME,ADDRESS,EMAIL,CONTACT_NO,CREDIT_LEVEL,SAS_NO) values ('01','Kamal Perera','Colombo','kamal@gmail.com','0785854525',25000,1);
Insert into SYSTEM.CUSTOMER (CUS_CODE,CUS_NAME,ADDRESS,EMAIL,CONTACT_NO,CREDIT_LEVEL,SAS_NO) values ('001','Kamal Kumara','Colombo','kamalkumara@gmail.com','0785874585',0,1);
Insert into SYSTEM.CUSTOMER (CUS_CODE,CUS_NAME,ADDRESS,EMAIL,CONTACT_NO,CREDIT_LEVEL,SAS_NO) values ('122212','Gayan Perera','Kurunegala','gayan@gmail.com','0378255225',0,1);
Insert into SYSTEM.CUSTOMER (CUS_CODE,CUS_NAME,ADDRESS,EMAIL,CONTACT_NO,CREDIT_LEVEL,SAS_NO) values ('wer234','Samantha Wijebandara','colombo 3','samantha@hotmail.com','0112556655',0,1);
Insert into SYSTEM.CUSTOMER (CUS_CODE,CUS_NAME,ADDRESS,EMAIL,CONTACT_NO,CREDIT_LEVEL,SAS_NO) values ('CASH','CASH',' ','cash@gmail.com','0987548758',0,1);
REM INSERTING into SYSTEM.CREDITCARD
SET DEFINE OFF;
Insert into SYSTEM.CREDITCARD (TRANSNO,SAS_NO,AMOUNT,CARDNO,ACC_CODE) values (366,1,1200,'234234','01');
Insert into SYSTEM.CREDITCARD (TRANSNO,SAS_NO,AMOUNT,CARDNO,ACC_CODE) values (381,1,1000,'8976465464','01');
Insert into SYSTEM.CREDITCARD (TRANSNO,SAS_NO,AMOUNT,CARDNO,ACC_CODE) values (404,1,12350,'13215','001');
Insert into SYSTEM.CREDITCARD (TRANSNO,SAS_NO,AMOUNT,CARDNO,ACC_CODE) values (405,1,6600,'56465','01');
Insert into SYSTEM.CREDITCARD (TRANSNO,SAS_NO,AMOUNT,CARDNO,ACC_CODE) values (441,1,25000,'65','001');
Insert into SYSTEM.CREDITCARD (TRANSNO,SAS_NO,AMOUNT,CARDNO,ACC_CODE) values (461,1,1000,'131321321','CASH');
Insert into SYSTEM.CREDITCARD (TRANSNO,SAS_NO,AMOUNT,CARDNO,ACC_CODE) values (364,1,60000,'31231','01');
Insert into SYSTEM.CREDITCARD (TRANSNO,SAS_NO,AMOUNT,CARDNO,ACC_CODE) values (365,1,5500,'1312321','01');
REM INSERTING into SYSTEM.CONTACT_DETAILS
SET DEFINE OFF;
Insert into SYSTEM.CONTACT_DETAILS (ADDRESS,CITY,COUNTRY,WORK_EMAIL,OTHER_EMAIL,EMP_ID,PROVINCE,POSTAL_CORD,HOME_TELEPHON,MOBILE,WORK_TELEPHON,CONTACT_ID,SAS_NO) values (' Colombo 05','Colombo','Sri Lanka','abc@123.lk','der@ads.lk',61,'Central',6444,65465456,4546464,465454,21,null);
Insert into SYSTEM.CONTACT_DETAILS (ADDRESS,CITY,COUNTRY,WORK_EMAIL,OTHER_EMAIL,EMP_ID,PROVINCE,POSTAL_CORD,HOME_TELEPHON,MOBILE,WORK_TELEPHON,CONTACT_ID,SAS_NO) values (' sas','Colombo','asdas','asdas@asda.lk','dasdas@sdf.lk',4,'Central',23,321,21,213,1,null);
REM INSERTING into SYSTEM.CHEQUES
SET DEFINE OFF;
Insert into SYSTEM.CHEQUES (INVOICENO,SAS_NO,CHEQUENO,BDATE,BANK,BBRANCH,ACCNO,AMOUNT) values (362,1,'16445465',null,'BOC','Kandy','wer234',4500);
Insert into SYSTEM.CHEQUES (INVOICENO,SAS_NO,CHEQUENO,BDATE,BANK,BBRANCH,ACCNO,AMOUNT) values (365,1,'332432',null,'BOC','Kandy','01',6000);
Insert into SYSTEM.CHEQUES (INVOICENO,SAS_NO,CHEQUENO,BDATE,BANK,BBRANCH,ACCNO,AMOUNT) values (381,1,'48648464',null,'BOC','Kegalle','01',10000);
Insert into SYSTEM.CHEQUES (INVOICENO,SAS_NO,CHEQUENO,BDATE,BANK,BBRANCH,ACCNO,AMOUNT) values (405,1,'54564645',null,'BOC','Kurunegala','01',2500);
Insert into SYSTEM.CHEQUES (INVOICENO,SAS_NO,CHEQUENO,BDATE,BANK,BBRANCH,ACCNO,AMOUNT) values (441,1,'6545644',null,'ter','re','001',2500);
Insert into SYSTEM.CHEQUES (INVOICENO,SAS_NO,CHEQUENO,BDATE,BANK,BBRANCH,ACCNO,AMOUNT) values (461,1,'013132132',null,'BOC','Kandy','CASH',8000);
REM INSERTING into SYSTEM.ATTENDENT
SET DEFINE OFF;
Insert into SYSTEM.ATTENDENT (ATTENDENT_ID,A_DATE,PUNCH_IN,PUNCH_OUT,PUNCH_IN_NOTE,PUNCH_OUT_NOTE,EMP_ID,COLUMN1,SAS_NO) values (1,to_date('16-JUN-15','DD-MON-RR'),to_date('16-JUN-15','DD-MON-RR'),to_date('16-JUN-15','DD-MON-RR'),null,null,41,null,null);
Insert into SYSTEM.ATTENDENT (ATTENDENT_ID,A_DATE,PUNCH_IN,PUNCH_OUT,PUNCH_IN_NOTE,PUNCH_OUT_NOTE,EMP_ID,COLUMN1,SAS_NO) values (2,to_date('16-JUN-15','DD-MON-RR'),to_date('16-JUN-15','DD-MON-RR'),to_date('16-JUN-15','DD-MON-RR'),null,null,61,null,null);
Insert into SYSTEM.ATTENDENT (ATTENDENT_ID,A_DATE,PUNCH_IN,PUNCH_OUT,PUNCH_IN_NOTE,PUNCH_OUT_NOTE,EMP_ID,COLUMN1,SAS_NO) values (3,to_date('16-JUN-15','DD-MON-RR'),to_date('16-JUN-15','DD-MON-RR'),to_date('16-JUN-15','DD-MON-RR'),null,null,1,null,null);
Insert into SYSTEM.ATTENDENT (ATTENDENT_ID,A_DATE,PUNCH_IN,PUNCH_OUT,PUNCH_IN_NOTE,PUNCH_OUT_NOTE,EMP_ID,COLUMN1,SAS_NO) values (4,to_date('17-JUN-15','DD-MON-RR'),to_date('17-JUN-15','DD-MON-RR'),to_date('17-JUN-15','DD-MON-RR'),null,null,41,null,null);
Insert into SYSTEM.ATTENDENT (ATTENDENT_ID,A_DATE,PUNCH_IN,PUNCH_OUT,PUNCH_IN_NOTE,PUNCH_OUT_NOTE,EMP_ID,COLUMN1,SAS_NO) values (5,to_date('17-JUN-15','DD-MON-RR'),to_date('17-JUN-15','DD-MON-RR'),to_date('17-JUN-15','DD-MON-RR'),null,null,1,null,null);
REM INSERTING into SYSTEM.ATTACHMENT
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index USER_TYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."USER_TYPE_PK" ON "SYSTEM"."USER_TYPE" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index STOCK_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."STOCK_PK" ON "SYSTEM"."STOCK" ("TRANSNO", "SAS_NO", "ITEM_CODE", "TRANS_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011059
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011059" ON "SYSTEM"."SUPPLIER" ("SUP_CODE", "SAS_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index USER_PERMISSION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."USER_PERMISSION_PK" ON "SYSTEM"."USER_PERMISSION" ("PERMISION_TYPE", "USER_GROUP_ID", "MD_ID", "PK_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index WORK_EXPERIENCE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."WORK_EXPERIENCE_PK" ON "SYSTEM"."WORK_EXPERIENCE" ("EXPERIENCE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SOFTWARE_MODULES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SOFTWARE_MODULES_PK" ON "SYSTEM"."SOFTWARE_MODULES" ("PK_ID", "M_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SKILLS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SKILLS_PK" ON "SYSTEM"."SKILLS" ("SKILL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SETTING_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SETTING_PK" ON "SYSTEM"."SETTING" ("NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011055
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011055" ON "SYSTEM"."SAS" ("SAS_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011094
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011094" ON "SYSTEM"."SALES_TYPES" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SALES_SUMMURY_MONTH_WISE_T_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SALES_SUMMURY_MONTH_WISE_T_PK" ON "SYSTEM"."SALES_SUMMURY_MONTH_WISE_TBL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011121
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011121" ON "SYSTEM"."SALES_SUM" ("INVOICE_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index INNOSASNO
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."INNOSASNO" ON "SYSTEM"."SALES_SUM" ("INVOICE_NO", "SAS_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011080
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011080" ON "SYSTEM"."SALES_RETURN_SUM" ("SRNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C007398
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C007398" ON "SYSTEM"."SALES_RETURN_SUM" ("SRNO", "SAS_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011090
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011090" ON "SYSTEM"."SALES_RETURN_DETAILS" ("SRNO", "ITEM_CODE", "SAS_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011129
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011129" ON "SYSTEM"."SALES_DETAILS" ("INVOICENO", "ITEMCODE", "SAS_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SALARY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SALARY_PK" ON "SYSTEM"."SALARY" ("SALARY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011063
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011063" ON "SYSTEM"."PURCHASE_RETURN" ("PRNNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C007413
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C007413" ON "SYSTEM"."PURCHASE_RETURN" ("PRNNO", "SAS_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011136
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011136" ON "SYSTEM"."PRN_DETAILS" ("PRNNO", "ITEMCODE", "SAS_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PHOTOGRAPH_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."PHOTOGRAPH_PK" ON "SYSTEM"."PHOTOGRAPH" ("P_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
  PARALLEL ;
--------------------------------------------------------
--  DDL for Index PHOTOGRAPH_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."PHOTOGRAPH_UK1" ON "SYSTEM"."PHOTOGRAPH" ("EMP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PERSONAL_DETAILS_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."PERSONAL_DETAILS_UK1" ON "SYSTEM"."PERSONAL_DETAILS" ("NIC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PERSONAL_DETAILS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."PERSONAL_DETAILS_PK" ON "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index OPERNING_STOCK_DETAILS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."OPERNING_STOCK_DETAILS_PK" ON "SYSTEM"."OPERNING_STOCK" ("SAS_NO", "ITEM_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MESSAGES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."MESSAGES_PK" ON "SYSTEM"."MESSAGES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C007646
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C007646" ON "SYSTEM"."MEMBERSHIP" ("MEMBERSHIP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index LOAN_BALANCE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."LOAN_BALANCE_PK" ON "SYSTEM"."LOAN_BALANCE" ("PAY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index LICENSE_PK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."LICENSE_PK1" ON "SYSTEM"."LICENSE" ("LICEN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index LEAVE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."LEAVE_PK" ON "SYSTEM"."LEAVE" ("LEAVE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index LANGUAGES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."LANGUAGES_PK" ON "SYSTEM"."LANGUAGES" ("LAN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index JOB_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."JOB_PK" ON "SYSTEM"."JOB" ("JOB_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C11112
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C11112" ON "SYSTEM"."ITEMS" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ITEMS_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."ITEMS_UK1" ON "SYSTEM"."ITEMS" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ITEMS_UK2
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."ITEMS_UK2" ON "SYSTEM"."ITEMS" ("BARCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011112
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011112" ON "SYSTEM"."ITEMS" ("SAS_NO", "CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C007108
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C007108" ON "SYSTEM"."ITEM_CATEGORY" ("CAT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ITEM_CATEGORY_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."ITEM_CATEGORY_UK1" ON "SYSTEM"."ITEM_CATEGORY" ("CAT_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C007293
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C007293" ON "SYSTEM"."ITEM_CATEGORY" ("CAT_CODE", "SAS_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index IMMIGRATION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."IMMIGRATION_PK" ON "SYSTEM"."IMMIGRATION" ("I_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index HELP_TOPIC_SEQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."HELP_TOPIC_SEQ" ON "SYSTEM"."HELP" ("TOPIC", "SEQ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 16384 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011105
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011105" ON "SYSTEM"."GRN_DETAILS" ("GRNNO", "ITEMCODE", "SAS_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011098
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011098" ON "SYSTEM"."GRN" ("GRNNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ERPUSER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."ERPUSER_PK" ON "SYSTEM"."ERPUSER" ("USERNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C007564
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C007564" ON "SYSTEM"."ERP_PAYABALE_RECEIVABLE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ERP_LEDGER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."ERP_LEDGER_PK" ON "SYSTEM"."ERP_LEDGER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C007559
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C007559" ON "SYSTEM"."ERP_INVOICE_DETAILS" ("INVOICE_NO", "LEDGER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ERP_CHEQUES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."ERP_CHEQUES_PK" ON "SYSTEM"."ERP_CHEQUES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C007000
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C007000" ON "SYSTEM"."ERP_BANK_ACCOUNT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_ERP_ACCOUNTYEAR
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."PK_ERP_ACCOUNTYEAR" ON "SYSTEM"."ERP_ACCOUNTYEAR" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ACCOUNT_TYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."ACCOUNT_TYPE_PK" ON "SYSTEM"."ERP_ACCOUNT_TYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ERP_ACCOUNT_PAY_RECEIVE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."ERP_ACCOUNT_PAY_RECEIVE_PK" ON "SYSTEM"."ERP_ACCOUNT_PAY_RECEIVE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C007695
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C007695" ON "SYSTEM"."EMPLOYEE_POST" ("POST_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index EMPLOYEE_LOANTYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."EMPLOYEE_LOANTYPE_PK" ON "SYSTEM"."EMPLOYEE_LOANTYPE" ("LOAN_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index EMPLOYEE_LOAN_BALANCE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."EMPLOYEE_LOAN_BALANCE_PK" ON "SYSTEM"."EMPLOYEE_LOAN_BALANCE" ("PAYMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C007637
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C007637" ON "SYSTEM"."EMPLOYEE_LOAN" ("LOAN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index UK_R63PILOB1SGB3RE0KP4NYL678
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."UK_R63PILOB1SGB3RE0KP4NYL678" ON "SYSTEM"."EMPLOYEE_LOAN" ("EMPLOYEE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index EMPLOYEE_ADVANCEPAYMENT_PK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."EMPLOYEE_ADVANCEPAYMENT_PK1" ON "SYSTEM"."EMPLOYEE_ADVANCEPAYMENT" ("PAYMENT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index EMPLOYEE_ADVANCEPAYMENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."EMPLOYEE_ADVANCEPAYMENT_PK" ON "SYSTEM"."EMPLOYEE_ADVANCEPAYMENT" ("EMPLOYEE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index EMERGENCY_CONTACT_PK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."EMERGENCY_CONTACT_PK1" ON "SYSTEM"."EMERGENCY_CONTACT" ("EC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index EDUCATION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."EDUCATION_PK" ON "SYSTEM"."EDUCATION" ("EDUCATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index DEPENDENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."DEPENDENT_PK" ON "SYSTEM"."DEPENDENT" ("DEPENDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index TABLE1_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."TABLE1_PK" ON "SYSTEM"."DEPARTMENT" ("SAS_NO", "DEPTNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C0011073
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."SYS_C0011073" ON "SYSTEM"."CUSTOMER" ("CUS_CODE", "SAS_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CREDITCARD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."CREDITCARD_PK" ON "SYSTEM"."CREDITCARD" ("ACC_CODE", "CARDNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CONTACT_DETAILS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."CONTACT_DETAILS_PK" ON "SYSTEM"."CONTACT_DETAILS" ("CONTACT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CHEQUES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."CHEQUES_PK" ON "SYSTEM"."CHEQUES" ("CHEQUENO", "BBRANCH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ATTENDENT_PK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."ATTENDENT_PK1" ON "SYSTEM"."ATTENDENT" ("ATTENDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ATTACHMENT_PK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."ATTACHMENT_PK1" ON "SYSTEM"."ATTACHMENT" ("ATTACHED_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table USER_TYPE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."USER_TYPE" MODIFY ("CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."USER_TYPE" MODIFY ("USER_TYPE_DESCRIPTION" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."USER_TYPE" ADD CONSTRAINT "USER_TYPE_PK" PRIMARY KEY ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table STOCK
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."STOCK" MODIFY ("TRANSNO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."STOCK" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."STOCK" MODIFY ("ITEM_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."STOCK" ADD CONSTRAINT "STOCK_PK" PRIMARY KEY ("TRANSNO", "SAS_NO", "ITEM_CODE", "TRANS_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SUPPLIER
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SUPPLIER" MODIFY ("SUP_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SUPPLIER" MODIFY ("SUP_NAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SUPPLIER" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SUPPLIER" ADD CONSTRAINT "SYS_C0011059" PRIMARY KEY ("SUP_CODE", "SAS_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table USER_PERMISSION
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."USER_PERMISSION" MODIFY ("PK_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."USER_PERMISSION" MODIFY ("MD_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."USER_PERMISSION" MODIFY ("USER_GROUP_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."USER_PERMISSION" MODIFY ("PERMISION_TYPE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."USER_PERMISSION" ADD CONSTRAINT "USER_PERMISSION_PK" PRIMARY KEY ("PERMISION_TYPE", "USER_GROUP_ID", "MD_ID", "PK_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table WORK_EXPERIENCE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."WORK_EXPERIENCE" MODIFY ("EXPERIENCE_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."WORK_EXPERIENCE" ADD CONSTRAINT "WORK_EXPERIENCE_PK" PRIMARY KEY ("EXPERIENCE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SOFTWARE_MODULES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SOFTWARE_MODULES" MODIFY ("PK_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SOFTWARE_MODULES" MODIFY ("M_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SOFTWARE_MODULES" ADD CONSTRAINT "SOFTWARE_MODULES_PK" PRIMARY KEY ("PK_ID", "M_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SKILLS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SKILLS" MODIFY ("SKILL_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SKILLS" MODIFY ("EMP_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SKILLS" ADD CONSTRAINT "SKILLS_PK" PRIMARY KEY ("SKILL_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SETTING
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SETTING" MODIFY ("NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SETTING" ADD CONSTRAINT "SETTING_PK" PRIMARY KEY ("NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SAS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SAS" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SAS" MODIFY ("DESCRIPTION" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SAS" ADD CONSTRAINT "SYS_C0011055" PRIMARY KEY ("SAS_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SALES_TYPES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SALES_TYPES" MODIFY ("CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_TYPES" MODIFY ("DESCRIPTION" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_TYPES" ADD CONSTRAINT "SYS_C0011094" PRIMARY KEY ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SALES_SUMMURY_MONTH_WISE_TBL
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SALES_SUMMURY_MONTH_WISE_TBL" ADD CONSTRAINT "SALES_SUMMURY_MONTH_WISE_T_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."SALES_SUMMURY_MONTH_WISE_TBL" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SALES_SUM
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SALES_SUM" ADD CONSTRAINT "SYS_C0011121" PRIMARY KEY ("INVOICE_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."SALES_SUM" ADD CONSTRAINT "INNOSASNO" UNIQUE ("INVOICE_NO", "SAS_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."SALES_SUM" MODIFY ("INVOICE_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_SUM" MODIFY ("CUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_SUM" MODIFY ("DDATE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_SUM" MODIFY ("SALES_TYPE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_SUM" MODIFY ("TOTAL_AMOUNT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_SUM" MODIFY ("NET_AMOUNT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_SUM" MODIFY ("SAS_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SALES_RETURN_SUM
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SALES_RETURN_SUM" ADD CONSTRAINT "SYS_C0011080" PRIMARY KEY ("SRNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."SALES_RETURN_SUM" ADD UNIQUE ("SRNO", "SAS_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."SALES_RETURN_SUM" MODIFY ("SRNO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_RETURN_SUM" MODIFY ("TOTAL_AMOUNT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_RETURN_SUM" MODIFY ("NET_AMOUNT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_RETURN_SUM" MODIFY ("CUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_RETURN_SUM" MODIFY ("SAS_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SALES_RETURN_DETAILS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SALES_RETURN_DETAILS" MODIFY ("SRNO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_RETURN_DETAILS" MODIFY ("ITEM_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_RETURN_DETAILS" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_RETURN_DETAILS" ADD CONSTRAINT "SYS_C0011090" PRIMARY KEY ("SRNO", "ITEM_CODE", "SAS_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SALES_DETAILS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SALES_DETAILS" ADD CONSTRAINT "SYS_C0011129" PRIMARY KEY ("INVOICENO", "ITEMCODE", "SAS_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."SALES_DETAILS" MODIFY ("TOTAL" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_DETAILS" MODIFY ("NET_AMOUNT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_DETAILS" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_DETAILS" MODIFY ("INVOICENO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALES_DETAILS" MODIFY ("ITEMCODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SALARY
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SALARY" MODIFY ("POSITION" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALARY" MODIFY ("PAY_FREQUENCY" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALARY" MODIFY ("BASIC_SALARY" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALARY" MODIFY ("SALARY_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."SALARY" ADD CONSTRAINT "SALARY_PK" PRIMARY KEY ("SALARY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PURCHASE_RETURN
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."PURCHASE_RETURN" ADD CONSTRAINT "SYS_C0011063" PRIMARY KEY ("PRNNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."PURCHASE_RETURN" ADD UNIQUE ("PRNNO", "SAS_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."PURCHASE_RETURN" MODIFY ("PRNNO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."PURCHASE_RETURN" MODIFY ("SUP_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."PURCHASE_RETURN" MODIFY ("SAS_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PRN_DETAILS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."PRN_DETAILS" MODIFY ("PRNNO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."PRN_DETAILS" MODIFY ("ITEMCODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."PRN_DETAILS" MODIFY ("TOTAL" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."PRN_DETAILS" MODIFY ("NET_AMOUNT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."PRN_DETAILS" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."PRN_DETAILS" ADD CONSTRAINT "SYS_C0011136" PRIMARY KEY ("PRNNO", "ITEMCODE", "SAS_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PHOTOGRAPH
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."PHOTOGRAPH" MODIFY ("P_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."PHOTOGRAPH" MODIFY ("EMP_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."PHOTOGRAPH" ADD CONSTRAINT "PHOTOGRAPH_PK" PRIMARY KEY ("P_NUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."PHOTOGRAPH" MODIFY ("PHOTO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."PHOTOGRAPH" ADD CONSTRAINT "PHOTOGRAPH_UK1" UNIQUE ("EMP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PERSONAL_DETAILS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."PERSONAL_DETAILS" ADD CONSTRAINT "PERSONAL_DETAILS_UK1" UNIQUE ("NIC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."PERSONAL_DETAILS" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."PERSONAL_DETAILS" ADD CONSTRAINT "PERSONAL_DETAILS_PK" PRIMARY KEY ("EMPLOYEE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OPERNING_STOCK
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."OPERNING_STOCK" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."OPERNING_STOCK" MODIFY ("ITEM_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."OPERNING_STOCK" MODIFY ("STOCK" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."OPERNING_STOCK" ADD CONSTRAINT "OPERNING_STOCK_DETAILS_PK" PRIMARY KEY ("SAS_NO", "ITEM_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MESSAGES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."MESSAGES" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."MESSAGES" ADD CONSTRAINT "MESSAGES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MEMBERSHIP
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."MEMBERSHIP" ADD PRIMARY KEY ("MEMBERSHIP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."MEMBERSHIP" MODIFY ("MEMBERSHIP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LOAN_BALANCE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."LOAN_BALANCE" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."LOAN_BALANCE" MODIFY ("PAY_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."LOAN_BALANCE" ADD CONSTRAINT "LOAN_BALANCE_PK" PRIMARY KEY ("PAY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LICENSE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."LICENSE" ADD CONSTRAINT "LICENSE_PK" PRIMARY KEY ("LICEN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."LICENSE" MODIFY ("LICEN_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LEAVE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."LEAVE" MODIFY ("LEAVE_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."LEAVE" ADD CONSTRAINT "LEAVE_PK" PRIMARY KEY ("LEAVE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LANGUAGES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."LANGUAGES" MODIFY ("LAN_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."LANGUAGES" ADD CONSTRAINT "LANGUAGES_PK" PRIMARY KEY ("LAN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table JOB
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."JOB" ADD CONSTRAINT "JOB_PK" PRIMARY KEY ("JOB_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ITEMS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ITEMS" MODIFY ("CAT_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ITEMS" MODIFY ("CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ITEMS" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ITEMS" MODIFY ("SUP_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ITEMS" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ITEMS" ADD CONSTRAINT "SYS_C0011112" PRIMARY KEY ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ITEMS" ADD CONSTRAINT "ITEMS_UK2" UNIQUE ("BARCODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ITEMS" ADD CONSTRAINT "ITEMS_UK1" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ITEM_CATEGORY
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ITEM_CATEGORY" ADD CONSTRAINT "SYS_C007108" PRIMARY KEY ("CAT_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ITEM_CATEGORY" ADD CONSTRAINT "ITEM_CATEGORY_UK1" UNIQUE ("CAT_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ITEM_CATEGORY" MODIFY ("CAT_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ITEM_CATEGORY" MODIFY ("CAT_NAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ITEM_CATEGORY" MODIFY ("SAS_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMMIGRATION
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."IMMIGRATION" ADD CONSTRAINT "IMMIGRATION_PK" PRIMARY KEY ("I_NUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table HELP
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."HELP" ADD CONSTRAINT "HELP_TOPIC_SEQ" PRIMARY KEY ("TOPIC", "SEQ")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 16384 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."HELP" MODIFY ("SEQ" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."HELP" MODIFY ("TOPIC" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GRN_DETAILS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."GRN_DETAILS" MODIFY ("GRNNO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."GRN_DETAILS" MODIFY ("ITEMCODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."GRN_DETAILS" MODIFY ("TOTAL" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."GRN_DETAILS" MODIFY ("NET_AMOUNT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."GRN_DETAILS" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."GRN_DETAILS" ADD CONSTRAINT "SYS_C0011105" PRIMARY KEY ("GRNNO", "ITEMCODE", "SAS_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table GRN
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."GRN" MODIFY ("GRNNO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."GRN" MODIFY ("SUP_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."GRN" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."GRN" ADD CONSTRAINT "SYS_C0011098" PRIMARY KEY ("GRNNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ERPUSER
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERPUSER" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERPUSER" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERPUSER" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERPUSER" MODIFY ("FULLNAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERPUSER" MODIFY ("ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERPUSER" ADD CONSTRAINT "ERPUSER_PK" PRIMARY KEY ("USERNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ERPUSER" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERPUSER" MODIFY ("DEPARTMENT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERPUSER" MODIFY ("TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ERP_PAYABALE_RECEIVABLE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_PAYABALE_RECEIVABLE" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ERP_PAYABALE_RECEIVABLE" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_PAYABALE_RECEIVABLE" MODIFY ("AMOUNT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_PAYABALE_RECEIVABLE" MODIFY ("INVOICE_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_PAYABALE_RECEIVABLE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ERP_LEDGER
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_LEDGER" ADD CONSTRAINT "ERP_LEDGER_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ERP_LEDGER" MODIFY ("LEDG_DATE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_LEDGER" MODIFY ("DEBIT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_LEDGER" MODIFY ("CREDIT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_LEDGER" MODIFY ("ACCOUNT_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_LEDGER" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_LEDGER" MODIFY ("ACCOUNT_TYPE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_LEDGER" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ERP_INVOICE_DETAILS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_INVOICE_DETAILS" ADD PRIMARY KEY ("INVOICE_NO", "LEDGER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ERP_INVOICE_DETAILS" MODIFY ("LEDGER_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_INVOICE_DETAILS" MODIFY ("INVOICE_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ERP_CHEQUES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_CHEQUES" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_CHEQUES" ADD CONSTRAINT "ERP_CHEQUES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ERP_CHEQUES" MODIFY ("CHEQUENO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_CHEQUES" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ERP_BANK_ACCOUNT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_BANK_ACCOUNT" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_BANK_ACCOUNT" MODIFY ("BRANCH_NAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_BANK_ACCOUNT" MODIFY ("ACCOUNT_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_BANK_ACCOUNT" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ERP_BANK_ACCOUNT" MODIFY ("BANK" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_BANK_ACCOUNT" MODIFY ("ACCUNT_NAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_BANK_ACCOUNT" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ERP_ACCOUNTYEAR
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_ACCOUNTYEAR" MODIFY ("STARTDATE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_ACCOUNTYEAR" MODIFY ("ENDDATE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_ACCOUNTYEAR" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_ACCOUNTYEAR" ADD CONSTRAINT "PK_ERP_ACCOUNTYEAR" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ERP_ACCOUNT_TYPE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_ACCOUNT_TYPE" ADD CONSTRAINT "ACCOUNT_TYPE_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ERP_ACCOUNT_TYPE" MODIFY ("ACCOUNT_TYPE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_ACCOUNT_TYPE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ERP_ACCOUNT_PAY_RECEIVE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_ACCOUNT_PAY_RECEIVE" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_ACCOUNT_PAY_RECEIVE" ADD CONSTRAINT "ERP_ACCOUNT_PAY_RECEIVE_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ERP_ACCOUNT_PAY_RECEIVE" MODIFY ("INVOICE_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ERP_ACCOUNT_PAY_RECEIVE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EMPLOYEE_POST
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."EMPLOYEE_POST" ADD PRIMARY KEY ("POST_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."EMPLOYEE_POST" MODIFY ("DURATION" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_POST" MODIFY ("EMP_OT_RATE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_POST" MODIFY ("EMP_BSALARY" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_POST" MODIFY ("EMP_POST" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_POST" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_POST" MODIFY ("POST_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EMPLOYEE_LOANTYPE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."EMPLOYEE_LOANTYPE" MODIFY ("LOAN_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_LOANTYPE" ADD CONSTRAINT "EMPLOYEE_LOANTYPE_PK" PRIMARY KEY ("LOAN_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."EMPLOYEE_LOANTYPE" MODIFY ("DURATION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EMPLOYEE_LOAN_BALANCE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."EMPLOYEE_LOAN_BALANCE" MODIFY ("AMMOUNT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_LOAN_BALANCE" MODIFY ("LOAN_BALANCE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_LOAN_BALANCE" MODIFY ("PAYMENT_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_LOAN_BALANCE" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_LOAN_BALANCE" ADD CONSTRAINT "EMPLOYEE_LOAN_BALANCE_PK" PRIMARY KEY ("PAYMENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."EMPLOYEE_LOAN_BALANCE" MODIFY ("LOAN_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EMPLOYEE_LOAN
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."EMPLOYEE_LOAN" ADD CONSTRAINT "UK_R63PILOB1SGB3RE0KP4NYL678" UNIQUE ("EMPLOYEE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."EMPLOYEE_LOAN" ADD PRIMARY KEY ("LOAN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."EMPLOYEE_LOAN" MODIFY ("MONTHLY" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_LOAN" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_LOAN" MODIFY ("LOAN_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EMPLOYEE_ADVANCEPAYMENT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."EMPLOYEE_ADVANCEPAYMENT" MODIFY ("PAYMENT_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMPLOYEE_ADVANCEPAYMENT" ADD CONSTRAINT "EMPLOYEE_ADVANCEPAYMENT_PK" PRIMARY KEY ("EMPLOYEE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."EMPLOYEE_ADVANCEPAYMENT" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EMERGENCY_CONTACT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."EMERGENCY_CONTACT" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMERGENCY_CONTACT" MODIFY ("RELATIONSHIP" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMERGENCY_CONTACT" MODIFY ("HOME_TELEPHONE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMERGENCY_CONTACT" MODIFY ("MOBILE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMERGENCY_CONTACT" MODIFY ("WORK_TELEPHONE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMERGENCY_CONTACT" MODIFY ("EC_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EMERGENCY_CONTACT" ADD CONSTRAINT "EMERGENCY_CONTACT_PK" PRIMARY KEY ("EC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."EMERGENCY_CONTACT" MODIFY ("EMP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EDUCATION
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."EDUCATION" MODIFY ("LEVELS" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EDUCATION" MODIFY ("INSTITUTE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EDUCATION" MODIFY ("MAJOR" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EDUCATION" MODIFY ("GPA" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EDUCATION" MODIFY ("START_DATE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EDUCATION" MODIFY ("END_DATE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EDUCATION" MODIFY ("EDUCATION_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EDUCATION" MODIFY ("EMP_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."EDUCATION" ADD CONSTRAINT "EDUCATION_PK" PRIMARY KEY ("EDUCATION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEPENDENT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."DEPENDENT" MODIFY ("DEPENDENT_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."DEPENDENT" MODIFY ("EMP_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."DEPENDENT" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."DEPENDENT" MODIFY ("RELATIONSHIP" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."DEPENDENT" MODIFY ("PLEASE_SPECIFY" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."DEPENDENT" MODIFY ("DATE_OF_BIRTH" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."DEPENDENT" ADD CONSTRAINT "DEPENDENT_PK" PRIMARY KEY ("DEPENDENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEPARTMENT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."DEPARTMENT" MODIFY ("DEPTNO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."DEPARTMENT" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."DEPARTMENT" ADD CONSTRAINT "DEPARTMENT_PK" PRIMARY KEY ("SAS_NO", "DEPTNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CUSTOMER
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."CUSTOMER" MODIFY ("CUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."CUSTOMER" MODIFY ("CUS_NAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."CUSTOMER" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."CUSTOMER" MODIFY ("SAS_NO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."CUSTOMER" ADD CONSTRAINT "SYS_C0011073" PRIMARY KEY ("CUS_CODE", "SAS_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CREDITCARD
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."CREDITCARD" MODIFY ("CARDNO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."CREDITCARD" MODIFY ("ACC_CODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."CREDITCARD" ADD CONSTRAINT "CREDITCARD_PK" PRIMARY KEY ("ACC_CODE", "CARDNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONTACT_DETAILS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."CONTACT_DETAILS" MODIFY ("EMP_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."CONTACT_DETAILS" ADD CONSTRAINT "CONTACT_DETAILS_PK" PRIMARY KEY ("CONTACT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CHEQUES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."CHEQUES" MODIFY ("CHEQUENO" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."CHEQUES" MODIFY ("BBRANCH" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."CHEQUES" ADD CONSTRAINT "CHEQUES_PK" PRIMARY KEY ("CHEQUENO", "BBRANCH")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ATTENDENT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ATTENDENT" MODIFY ("ATTENDENT_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ATTENDENT" ADD CONSTRAINT "ATTENDENT_PK" PRIMARY KEY ("ATTENDENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ATTACHMENT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ATTACHMENT" MODIFY ("SELECT_FILE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ATTACHMENT" MODIFY ("ATTACHED_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ATTACHMENT" MODIFY ("EMP_ID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ATTACHMENT" ADD CONSTRAINT "ATTACHMENT_PK" PRIMARY KEY ("ATTACHED_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SUPPLIER
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SUPPLIER" ADD CONSTRAINT "FK_SUPPLIER_SAS" FOREIGN KEY ("SAS_NO")
	  REFERENCES "SYSTEM"."SAS" ("SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USER_PERMISSION
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."USER_PERMISSION" ADD CONSTRAINT "USER_PERMISSION_FKTYPE" FOREIGN KEY ("USER_GROUP_ID")
	  REFERENCES "SYSTEM"."USER_TYPE" ("CODE") ENABLE;
  ALTER TABLE "SYSTEM"."USER_PERMISSION" ADD CONSTRAINT "USER_PERMISSION_FK_PKG" FOREIGN KEY ("PK_ID", "MD_ID")
	  REFERENCES "SYSTEM"."SOFTWARE_MODULES" ("PK_ID", "M_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table WORK_EXPERIENCE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."WORK_EXPERIENCE" ADD CONSTRAINT "WORK_EXPERIENCE_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SOFTWARE_MODULES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SOFTWARE_MODULES" ADD CONSTRAINT "SOFTWARE_MODULES_FK_PKG" FOREIGN KEY ("PK_ID")
	  REFERENCES "SYSTEM"."SOFTWARE_PACKAGES" ("PK_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SKILLS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SKILLS" ADD CONSTRAINT "SKILLS_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SALES_SUM
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SALES_SUM" ADD CONSTRAINT "FK_SALES_SUM_SALES_TYPES1" FOREIGN KEY ("SALES_TYPE")
	  REFERENCES "SYSTEM"."SALES_TYPES" ("CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SALES_RETURN_SUM
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SALES_RETURN_SUM" ADD CONSTRAINT "FK_SALES_RETURN_SUM_CUSTOMER1" FOREIGN KEY ("CUS_CODE", "SAS_NO")
	  REFERENCES "SYSTEM"."CUSTOMER" ("CUS_CODE", "SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SALES_RETURN_DETAILS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SALES_RETURN_DETAILS" ADD CONSTRAINT "SALES_RETURN_DETAILS_FK_ITEMS" FOREIGN KEY ("ITEM_CODE")
	  REFERENCES "SYSTEM"."ITEMS" ("CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SALES_DETAILS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SALES_DETAILS" ADD CONSTRAINT "FK_SALESUM_SD" FOREIGN KEY ("INVOICENO")
	  REFERENCES "SYSTEM"."SALES_SUM" ("INVOICE_NO") ENABLE;
  ALTER TABLE "SYSTEM"."SALES_DETAILS" ADD CONSTRAINT "SALES_DETAILS_FK_ITEM" FOREIGN KEY ("ITEMCODE")
	  REFERENCES "SYSTEM"."ITEMS" ("CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SALARY
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."SALARY" ADD CONSTRAINT "SALARY_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PURCHASE_RETURN
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."PURCHASE_RETURN" ADD CONSTRAINT "FK_PRN_SUPPLIER1" FOREIGN KEY ("SUP_CODE", "SAS_NO")
	  REFERENCES "SYSTEM"."SUPPLIER" ("SUP_CODE", "SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PRN_DETAILS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."PRN_DETAILS" ADD CONSTRAINT "FK_PRNDET_PRN" FOREIGN KEY ("PRNNO")
	  REFERENCES "SYSTEM"."PURCHASE_RETURN" ("PRNNO") ENABLE;
  ALTER TABLE "SYSTEM"."PRN_DETAILS" ADD CONSTRAINT "PRN_DETAILS_FK_ITEMS" FOREIGN KEY ("ITEMCODE")
	  REFERENCES "SYSTEM"."ITEMS" ("CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PHOTOGRAPH
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."PHOTOGRAPH" ADD CONSTRAINT "PHOTOGRAPH_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OPERNING_STOCK
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."OPERNING_STOCK" ADD CONSTRAINT "OPERNING_STOCK_FK_ITEMS" FOREIGN KEY ("ITEM_CODE")
	  REFERENCES "SYSTEM"."ITEMS" ("CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LOAN_BALANCE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."LOAN_BALANCE" ADD CONSTRAINT "LOAN_BALANCE_FK1" FOREIGN KEY ("LOAN_ID")
	  REFERENCES "SYSTEM"."EMPLOYEE_LOAN" ("LOAN_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LICENSE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."LICENSE" ADD CONSTRAINT "LICENSE_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LEAVE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."LEAVE" ADD CONSTRAINT "LEAVE_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LANGUAGES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."LANGUAGES" ADD CONSTRAINT "LANGUAGES_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table JOB
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."JOB" ADD CONSTRAINT "JOB_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ITEM_CATEGORY
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ITEM_CATEGORY" ADD CONSTRAINT "FK_ITEM_CATEGORY_SAS1" FOREIGN KEY ("SAS_NO")
	  REFERENCES "SYSTEM"."SAS" ("SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table IMMIGRATION
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."IMMIGRATION" ADD CONSTRAINT "IMMIGRATION_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GRN_DETAILS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."GRN_DETAILS" ADD CONSTRAINT "GRN_DETAILS_FK_ITEMS" FOREIGN KEY ("ITEMCODE")
	  REFERENCES "SYSTEM"."ITEMS" ("CODE") ENABLE;
  ALTER TABLE "SYSTEM"."GRN_DETAILS" ADD CONSTRAINT "fk_grn_grndet" FOREIGN KEY ("GRNNO")
	  REFERENCES "SYSTEM"."GRN" ("GRNNO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GRN
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."GRN" ADD CONSTRAINT "FK_GRN_SUPPLIER1" FOREIGN KEY ("SUP_CODE", "SAS_NO")
	  REFERENCES "SYSTEM"."SUPPLIER" ("SUP_CODE", "SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ERPUSER
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERPUSER" ADD CONSTRAINT "ERPUSER_FK_DEPARTMENT" FOREIGN KEY ("SAS_NO", "DEPARTMENT")
	  REFERENCES "SYSTEM"."DEPARTMENT" ("SAS_NO", "DEPTNO") ENABLE;
  ALTER TABLE "SYSTEM"."ERPUSER" ADD CONSTRAINT "ERPUSER_FK_SAS" FOREIGN KEY ("SAS_NO")
	  REFERENCES "SYSTEM"."SAS" ("SAS_NO") ENABLE;
  ALTER TABLE "SYSTEM"."ERPUSER" ADD CONSTRAINT "ERPUSER_FK_USERTYPE" FOREIGN KEY ("TYPE")
	  REFERENCES "SYSTEM"."USER_TYPE" ("CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ERP_PAYABALE_RECEIVABLE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_PAYABALE_RECEIVABLE" ADD CONSTRAINT "ERP_PAYABALE_RECEIVABLE_FK1" FOREIGN KEY ("SAS_NO")
	  REFERENCES "SYSTEM"."SAS" ("SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ERP_LEDGER
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_LEDGER" ADD CONSTRAINT "ERP_LEDGER_FK1" FOREIGN KEY ("SAS_NO")
	  REFERENCES "SYSTEM"."SAS" ("SAS_NO") ENABLE;
  ALTER TABLE "SYSTEM"."ERP_LEDGER" ADD CONSTRAINT "LEDGE_ACC" FOREIGN KEY ("ACCOUNT_TYPE")
	  REFERENCES "SYSTEM"."ERP_ACCOUNT_TYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ERP_CHEQUES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_CHEQUES" ADD CONSTRAINT "ERP_CHEQUES_FK1" FOREIGN KEY ("SAS_NO")
	  REFERENCES "SYSTEM"."SAS" ("SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ERP_BANK_ACCOUNT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_BANK_ACCOUNT" ADD CONSTRAINT "ERP_BANK_ACCOUNT_FK1" FOREIGN KEY ("SAS_NO")
	  REFERENCES "SYSTEM"."SAS" ("SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ERP_ACCOUNTYEAR
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_ACCOUNTYEAR" ADD CONSTRAINT "FK_ERP_ACCOUNTYEAR_SAS_SAS_NO" FOREIGN KEY ("SAS_NO")
	  REFERENCES "SYSTEM"."SAS" ("SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ERP_ACCOUNT_TYPE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_ACCOUNT_TYPE" ADD CONSTRAINT "ERP_ACCOUNT_TYPE_FK1" FOREIGN KEY ("SAS_NO")
	  REFERENCES "SYSTEM"."SAS" ("SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ERP_ACCOUNT_PAY_RECEIVE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ERP_ACCOUNT_PAY_RECEIVE" ADD CONSTRAINT "ERP_ACCOUNT_PAY_RECEIVE_FK1" FOREIGN KEY ("SAS_NO")
	  REFERENCES "SYSTEM"."SAS" ("SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMPLOYEE_POST
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."EMPLOYEE_POST" ADD CONSTRAINT "EMPLOYEE_POST_FK_EMPLIYEE" FOREIGN KEY ("EMPLOYEE_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMPLOYEE_ADVANCEPAYMENT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."EMPLOYEE_ADVANCEPAYMENT" ADD CONSTRAINT "EMPLOYEE_ADVANCEPAYMENT_FK1" FOREIGN KEY ("EMPLOYEE_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMERGENCY_CONTACT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."EMERGENCY_CONTACT" ADD CONSTRAINT "EMERGENCY_CONTACT_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EDUCATION
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."EDUCATION" ADD CONSTRAINT "EDUCATION_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DEPENDENT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."DEPENDENT" ADD CONSTRAINT "DEPENDENT_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CUSTOMER
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."CUSTOMER" ADD CONSTRAINT "FK_CUSTOMER_SAS1" FOREIGN KEY ("SAS_NO")
	  REFERENCES "SYSTEM"."SAS" ("SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CREDITCARD
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."CREDITCARD" ADD CONSTRAINT "CREDITCARD_FK_CUSTOMER" FOREIGN KEY ("ACC_CODE", "SAS_NO")
	  REFERENCES "SYSTEM"."CUSTOMER" ("CUS_CODE", "SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONTACT_DETAILS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."CONTACT_DETAILS" ADD CONSTRAINT "CONTACT_DETAILS_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CHEQUES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."CHEQUES" ADD CONSTRAINT "FK_CHEQUES" FOREIGN KEY ("INVOICENO", "SAS_NO")
	  REFERENCES "SYSTEM"."SALES_SUM" ("INVOICE_NO", "SAS_NO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ATTENDENT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ATTENDENT" ADD CONSTRAINT "ATTENDENT_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ATTACHMENT
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ATTACHMENT" ADD CONSTRAINT "ATTACHMENT_FK_EMP" FOREIGN KEY ("EMP_ID")
	  REFERENCES "SYSTEM"."PERSONAL_DETAILS" ("EMPLOYEE_ID") ENABLE;
--------------------------------------------------------
--  DDL for Trigger USER_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."USER_TYPE_TRG" 
BEFORE INSERT ON USER_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.CODE IS NULL THEN
      SELECT USER_TYPE_SEQ.NEXTVAL INTO :NEW.CODE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."USER_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger WORK_EXPERIENCE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."WORK_EXPERIENCE_TRG" 
BEFORE INSERT ON WORK_EXPERIENCE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.EXPERIENCE_ID IS NULL THEN
      SELECT WORK_EXPERIENCE_SEQ.NEXTVAL INTO :NEW.EXPERIENCE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."WORK_EXPERIENCE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SOFTWARE_MODULES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."SOFTWARE_MODULES_TRG" 
BEFORE INSERT ON SOFTWARE_MODULES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."SOFTWARE_MODULES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SKILLS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."SKILLS_TRG" 
BEFORE INSERT ON SKILLS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."SKILLS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SKILLS_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."SKILLS_TRG1" 
BEFORE INSERT ON SKILLS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.SKILL_ID IS NULL THEN
      SELECT SKILLS_SEQ1.NEXTVAL INTO :NEW.SKILL_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."SKILLS_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SETTING_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."SETTING_TRG" 
BEFORE INSERT ON SETTING 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.NO IS NULL THEN
      SELECT SETTING_SEQ.NEXTVAL INTO :NEW.NO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."SETTING_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SAS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."SAS_TRG" 
BEFORE INSERT ON SAS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.SAS_NO IS NULL THEN
      SELECT SAS_SEQ.NEXTVAL INTO :NEW.SAS_NO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."SAS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SALES_SUM_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."SALES_SUM_TRG" 
BEFORE INSERT ON SALES_SUM 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.INVOICE_NO IS NULL THEN
      SELECT SALES_SUM_SEQ.NEXTVAL INTO :NEW.INVOICE_NO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."SALES_SUM_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SALES_RETURN_SUM_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."SALES_RETURN_SUM_TRG" 
BEFORE INSERT ON SALES_RETURN_SUM 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.SRNO IS NULL THEN
      SELECT SALES_RETURN_SUM_SEQ.NEXTVAL INTO :NEW.SRNO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."SALES_RETURN_SUM_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SALARY_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."SALARY_TRG3" 
BEFORE INSERT ON SALARY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.SALARY_ID IS NULL THEN
      SELECT SALARY_SEQ.NEXTVAL INTO :NEW.SALARY_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."SALARY_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SALARY_TRG4
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."SALARY_TRG4" 
BEFORE INSERT ON SALARY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.SALARY_ID IS NULL THEN
      SELECT SALARY_SEQ.NEXTVAL INTO :NEW.SALARY_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."SALARY_TRG4" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SALARY_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."SALARY_TRG" 
BEFORE INSERT ON SALARY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."SALARY_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SALARY_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."SALARY_TRG1" 
BEFORE INSERT ON SALARY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."SALARY_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SALARY_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."SALARY_TRG2" 
BEFORE INSERT ON SALARY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."SALARY_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PURCHASE_RETURN_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."PURCHASE_RETURN_TRG" 
BEFORE INSERT ON PURCHASE_RETURN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PRNNO IS NULL THEN
      SELECT PURCHASE_RETURN_SEQ.NEXTVAL INTO :NEW.PRNNO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."PURCHASE_RETURN_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PHOTOGRAPH_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."PHOTOGRAPH_TRG" 
BEFORE INSERT ON PHOTOGRAPH 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.P_NUMBER IS NULL THEN
      SELECT PHOTOGRAPH_SEQ.NEXTVAL INTO :NEW.P_NUMBER FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."PHOTOGRAPH_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PERSONAL_DETAILS_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."PERSONAL_DETAILS_TRG1" 
BEFORE INSERT ON PERSONAL_DETAILS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.FIRST_NAME IS NULL THEN
      SELECT PERSONAL_DETAILS_SEQ1.NEXTVAL INTO :NEW.FIRST_NAME FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."PERSONAL_DETAILS_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PERSONAL_DETAILS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."PERSONAL_DETAILS_TRG" 
BEFORE INSERT ON PERSONAL_DETAILS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."PERSONAL_DETAILS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PERSONAL_DETAILS_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."PERSONAL_DETAILS_TRG2" 
BEFORE INSERT ON PERSONAL_DETAILS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.EMPLOYEE_ID IS NULL THEN
      SELECT PERSONAL_DETAILS_SEQ2.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."PERSONAL_DETAILS_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MESSAGES_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."MESSAGES_TRG1" 
BEFORE INSERT ON MESSAGES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."MESSAGES_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MESSAGES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."MESSAGES_TRG" 
BEFORE INSERT ON MESSAGES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."MESSAGES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LOAN_BALANCE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."LOAN_BALANCE_TRG1" 
BEFORE INSERT ON LOAN_BALANCE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PAY_ID IS NULL THEN
      SELECT LOAN_BALANCE_SEQ.NEXTVAL INTO :NEW.PAY_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."LOAN_BALANCE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LOAN_BALANCE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."LOAN_BALANCE_TRG" 
BEFORE INSERT ON LOAN_BALANCE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PAY_ID IS NULL THEN
      SELECT LOAN_BALANCE_SEQ.NEXTVAL INTO :NEW.PAY_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."LOAN_BALANCE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LICENSE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."LICENSE_TRG" 
BEFORE INSERT ON LICENSE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.LICENSE_TYPE IS NULL THEN
      SELECT LICENSE_SEQ.NEXTVAL INTO :NEW.LICENSE_TYPE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."LICENSE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LICENSE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."LICENSE_TRG1" 
BEFORE INSERT ON LICENSE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.LICEN_ID IS NULL THEN
      SELECT LICENSE_SEQ1.NEXTVAL INTO :NEW.LICEN_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."LICENSE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LEAVE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."LEAVE_TRG1" 
BEFORE INSERT ON LEAVE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."LEAVE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LEAVE_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."LEAVE_TRG2" 
BEFORE INSERT ON LEAVE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.LEAVE_ID IS NULL THEN
      SELECT LEAVE_SEQ2.NEXTVAL INTO :NEW.LEAVE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."LEAVE_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LEAVE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."LEAVE_TRG" 
BEFORE INSERT ON LEAVE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."LEAVE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LANGUAGES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."LANGUAGES_TRG" 
BEFORE INSERT ON LANGUAGES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."LANGUAGES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LANGUAGES_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."LANGUAGES_TRG1" 
BEFORE INSERT ON LANGUAGES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.LAN_ID IS NULL THEN
      SELECT LANGUAGES_SEQ1.NEXTVAL INTO :NEW.LAN_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."LANGUAGES_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger JOB_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."JOB_TRG" 
BEFORE INSERT ON JOB 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."JOB_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger JOB_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."JOB_TRG1" 
BEFORE INSERT ON JOB 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.JOB_ID IS NULL THEN
      SELECT JOB_SEQ1.NEXTVAL INTO :NEW.JOB_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."JOB_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ITEMS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ITEMS_TRG" 
BEFORE INSERT ON ITEMS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.CODE IS NULL THEN
      SELECT ITEMS_SEQ.NEXTVAL INTO :NEW.CODE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ITEMS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ITEM_CATEGORY_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ITEM_CATEGORY_TRG" 
BEFORE INSERT ON ITEM_CATEGORY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.CAT_CODE IS NULL THEN
      SELECT ITEM_CATEGORY_SEQ.NEXTVAL INTO :NEW.CAT_CODE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ITEM_CATEGORY_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger IMMIGRATION_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."IMMIGRATION_TRG" 
BEFORE INSERT ON IMMIGRATION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.I_NUMBER IS NULL THEN
      SELECT IMMIGRATION_SEQ.NEXTVAL INTO :NEW.I_NUMBER FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."IMMIGRATION_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger GRN_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."GRN_TRG" 
BEFORE INSERT ON GRN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.GRNNO IS NULL THEN
      SELECT GRN_SEQ.NEXTVAL INTO :NEW.GRNNO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."GRN_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ERP_PAYABALE_RECEIVABLE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ERP_PAYABALE_RECEIVABLE_TRG" 
BEFORE INSERT ON ERP_PAYABALE_RECEIVABLE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.STATE IS NULL THEN
      SELECT ERP_PAYABALE_RECEIVABLE_SEQ.NEXTVAL INTO :NEW.STATE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ERP_PAYABALE_RECEIVABLE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ERP_PAYABALE_RECEIVABLE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ERP_PAYABALE_RECEIVABLE_TRG1" 
BEFORE INSERT ON ERP_PAYABALE_RECEIVABLE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ERP_PAYABALE_RECEIVABLE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ERP_PAYABALE_RECEIVABLE_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ERP_PAYABALE_RECEIVABLE_TRG2" 
BEFORE INSERT ON ERP_PAYABALE_RECEIVABLE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ERP_PAYABALE_RECEIVABLE_SEQ2.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ERP_PAYABALE_RECEIVABLE_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ERP_LEDGER_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ERP_LEDGER_TRG2" 
BEFORE INSERT ON ERP_LEDGER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ERP_LEDGER_SEQ2.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ERP_LEDGER_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ERP_LEDGER_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ERP_LEDGER_TRG" 
BEFORE INSERT ON ERP_LEDGER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ERP_LEDGER_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ERP_LEDGER_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ERP_LEDGER_TRG1" 
BEFORE INSERT ON ERP_LEDGER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ERP_LEDGER_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ERP_CHEQUES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ERP_CHEQUES_TRG" 
BEFORE INSERT ON ERP_CHEQUES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ERP_CHEQUES_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ERP_CHEQUES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ERP_BANK_ACCOUNT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ERP_BANK_ACCOUNT_TRG" 
BEFORE INSERT ON ERP_BANK_ACCOUNT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ERP_BANK_ACCOUNT_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ERP_BANK_ACCOUNT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ERP_ACCOUNTYEAR_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ERP_ACCOUNTYEAR_TRG" 
BEFORE INSERT ON ERP_ACCOUNTYEAR 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ERP_ACCOUNTYEAR_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ERP_ACCOUNTYEAR_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ERP_ACCOUNT_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ERP_ACCOUNT_TYPE_TRG" 
BEFORE INSERT ON ERP_ACCOUNT_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ERP_ACCOUNT_TYPE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ERP_ACCOUNT_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ACCOUNT_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ACCOUNT_TYPE_TRG" 
BEFORE INSERT ON ERP_ACCOUNT_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ACCOUNT_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ERP_ACCOUNT_PAY_RECEIVE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ERP_ACCOUNT_PAY_RECEIVE_TRG1" 
BEFORE INSERT ON ERP_ACCOUNT_PAY_RECEIVE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ERP_ACCOUNT_PAY_RECEIVE_SEQ2.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ERP_ACCOUNT_PAY_RECEIVE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ERP_ACCOUNT_PAY_RECEIVE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ERP_ACCOUNT_PAY_RECEIVE_TRG" 
BEFORE INSERT ON ERP_ACCOUNT_PAY_RECEIVE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.REMARKS IS NULL THEN
      SELECT ERP_ACCOUNT_PAY_RECEIVE_SEQ.NEXTVAL INTO :NEW.REMARKS FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ERP_ACCOUNT_PAY_RECEIVE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_POST_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_POST_TRG" 
BEFORE INSERT ON EMPLOYEE_POST 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.POST_CODE IS NULL THEN
      SELECT EMPLOYEE_POST_SEQ.NEXTVAL INTO :NEW.POST_CODE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_POST_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOANTYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOANTYPE_TRG" 
BEFORE INSERT ON EMPLOYEE_LOANTYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOANTYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOANTYPE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOANTYPE_TRG1" 
BEFORE INSERT ON EMPLOYEE_LOANTYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.LOAN_CODE IS NULL THEN
      SELECT EMPLOYEE_LOANTYPE_SEQ1.NEXTVAL INTO :NEW.LOAN_CODE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOANTYPE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOANTYPE_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOANTYPE_TRG2" 
BEFORE INSERT ON EMPLOYEE_LOANTYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOANTYPE_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOANTYPE_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOANTYPE_TRG3" 
BEFORE INSERT ON EMPLOYEE_LOANTYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.LOAN_CODE IS NULL THEN
      SELECT EMPLOYEE_LOANTYPE_SEQ.NEXTVAL INTO :NEW.LOAN_CODE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOANTYPE_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOAN_BALANCE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOAN_BALANCE_TRG" 
BEFORE INSERT ON EMPLOYEE_LOAN_BALANCE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT EMPLOYEE_LOAN_BALANCE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOAN_BALANCE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOAN_BALANCE_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOAN_BALANCE_TRG2" 
BEFORE INSERT ON EMPLOYEE_LOAN_BALANCE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOAN_BALANCE_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOAN_BALANCE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOAN_BALANCE_TRG1" 
BEFORE INSERT ON EMPLOYEE_LOAN_BALANCE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOAN_BALANCE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOAN_BALANCE_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOAN_BALANCE_TRG3" 
BEFORE INSERT ON EMPLOYEE_LOAN_BALANCE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOAN_BALANCE_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOAN_BALANCE_TRG4
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOAN_BALANCE_TRG4" 
BEFORE INSERT ON EMPLOYEE_LOAN_BALANCE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PAYMENT_ID IS NULL THEN
      SELECT EMPLOYEE_LOAN_BALANCE_SEQ4.NEXTVAL INTO :NEW.PAYMENT_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOAN_BALANCE_TRG4" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOAN_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOAN_TRG" 
BEFORE INSERT ON EMPLOYEE_LOAN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOAN_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOAN_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOAN_TRG3" 
BEFORE INSERT ON EMPLOYEE_LOAN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOAN_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOAN_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOAN_TRG1" 
BEFORE INSERT ON EMPLOYEE_LOAN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOAN_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_LOAN_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_LOAN_TRG2" 
BEFORE INSERT ON EMPLOYEE_LOAN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_LOAN_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_ADVANCEPAYMENT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMPLOYEE_ADVANCEPAYMENT_TRG" 
BEFORE INSERT ON EMPLOYEE_ADVANCEPAYMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PAYMENT_CODE IS NULL THEN
      SELECT EMPLOYEE_ADVANCEPAYMENT_SEQ.NEXTVAL INTO :NEW.PAYMENT_CODE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMPLOYEE_ADVANCEPAYMENT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMERGENCY_CONTACT_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMERGENCY_CONTACT_TRG1" 
BEFORE INSERT ON EMERGENCY_CONTACT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMERGENCY_CONTACT_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMERGENCY_CONTACT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMERGENCY_CONTACT_TRG" 
BEFORE INSERT ON EMERGENCY_CONTACT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMERGENCY_CONTACT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMERGENCY_CONTACT_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMERGENCY_CONTACT_TRG2" 
BEFORE INSERT ON EMERGENCY_CONTACT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMERGENCY_CONTACT_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMERGENCY_CONTACT_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EMERGENCY_CONTACT_TRG3" 
BEFORE INSERT ON EMERGENCY_CONTACT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.EC_ID IS NULL THEN
      SELECT EMERGENCY_CONTACT_SEQ2.NEXTVAL INTO :NEW.EC_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EMERGENCY_CONTACT_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EDUCATION_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EDUCATION_TRG1" 
BEFORE INSERT ON EDUCATION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EDUCATION_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EDUCATION_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EDUCATION_TRG2" 
BEFORE INSERT ON EDUCATION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.EDUCATION_ID IS NULL THEN
      SELECT EDUCATION_SEQ2.NEXTVAL INTO :NEW.EDUCATION_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EDUCATION_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EDUCATION_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."EDUCATION_TRG" 
BEFORE INSERT ON EDUCATION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."EDUCATION_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEPENDENT_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."DEPENDENT_TRG1" 
BEFORE INSERT ON DEPENDENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.EMP_ID IS NULL THEN
      SELECT DEPENDENT_SEQ1.NEXTVAL INTO :NEW.EMP_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."DEPENDENT_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEPENDENT_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."DEPENDENT_TRG2" 
BEFORE INSERT ON DEPENDENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.DEPENDENT_ID IS NULL THEN
      SELECT DEPENDENT_SEQ1.NEXTVAL INTO :NEW.DEPENDENT_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."DEPENDENT_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEPENDENT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."DEPENDENT_TRG" 
BEFORE INSERT ON DEPENDENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."DEPENDENT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEPARTMENT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."DEPARTMENT_TRG" 
BEFORE INSERT ON DEPARTMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.DEPTNO IS NULL THEN
      SELECT DEPARTMENT_SEQ.NEXTVAL INTO :NEW.DEPTNO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."DEPARTMENT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CONTACT_DETAILS_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."CONTACT_DETAILS_TRG1" 
BEFORE INSERT ON CONTACT_DETAILS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ADDRESS IS NULL THEN
      SELECT CONTACT_DETAILS_SEQ1.NEXTVAL INTO :NEW.ADDRESS FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."CONTACT_DETAILS_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CONTACT_DETAILS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."CONTACT_DETAILS_TRG" 
BEFORE INSERT ON CONTACT_DETAILS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."CONTACT_DETAILS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CONTACT_DETAILS_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."CONTACT_DETAILS_TRG2" 
BEFORE INSERT ON CONTACT_DETAILS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.CONTACT_ID IS NULL THEN
      SELECT CONTACT_DETAILS_SEQ1.NEXTVAL INTO :NEW.CONTACT_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."CONTACT_DETAILS_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ATTENDENT_TRG4
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ATTENDENT_TRG4" 
BEFORE INSERT ON ATTENDENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ATTENDENT_ID IS NULL THEN
      SELECT ATTENDENT_SEQ.NEXTVAL INTO :NEW.ATTENDENT_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ATTENDENT_TRG4" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ATTENDENT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ATTENDENT_TRG" 
BEFORE INSERT ON ATTENDENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ATTENDENT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ATTENDENT_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ATTENDENT_TRG2" 
BEFORE INSERT ON ATTENDENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ATTENDENT_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ATTENDENT_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ATTENDENT_TRG1" 
BEFORE INSERT ON ATTENDENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ATTENDENT_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ATTENDENT_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ATTENDENT_TRG3" 
BEFORE INSERT ON ATTENDENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ATTENDENT_ID IS NULL THEN
      SELECT ATTENDENT_SEQ2.NEXTVAL INTO :NEW.ATTENDENT_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ATTENDENT_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ATTACHMENT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ATTACHMENT_TRG" 
BEFORE INSERT ON ATTACHMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ATTACHMENT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ATTACHMENT_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ATTACHMENT_TRG1" 
BEFORE INSERT ON ATTACHMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ATTACHMENT_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ATTACHMENT_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."ATTACHMENT_TRG2" 
BEFORE INSERT ON ATTACHMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ATTACHED_ID IS NULL THEN
      SELECT ATTACHMENT_SEQ2.NEXTVAL INTO :NEW.ATTACHED_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."ATTACHMENT_TRG2" ENABLE;
